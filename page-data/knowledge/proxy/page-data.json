{"componentChunkName":"component---src-templates-blog-template-js","path":"/knowledge/proxy/","result":{"data":{"cur":{"id":"90ba9fd5-6d2f-577f-abcf-788ab6c498f6","html":"<h3 id=\"개요\" style=\"position:relative;\"><a href=\"#%EA%B0%9C%EC%9A%94\" aria-label=\"개요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개요</h3>\n<p><code class=\"language-text\">프록시(Proxy) 서버</code>란 클라이언트가 자신을 거쳐 다른 네트워크에 접속할 수 있도록 <code class=\"language-text\">중간에서 대리</code>해주는 서버를 말한다. 서버와 클라이언트 사이에서 대리로 통신을 <code class=\"language-text\">수행해주는 것을 프록시</code>라고 하고 그 기능을 하는 <code class=\"language-text\">서버를 프록시 서버</code>라 부르게 되는 것이다.</p>\n<br/>\n<h3 id=\"프록시-서버의-원리\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9D%EC%8B%9C-%EC%84%9C%EB%B2%84%EC%9D%98-%EC%9B%90%EB%A6%AC\" aria-label=\"프록시 서버의 원리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프록시 서버의 원리</h3>\n<p>프록시 서버는 서버와 클라이언트 사이에서 요청과 응답을 처리해주게 되는 것을 말하는데</p>\n<ol>\n<li>클라이언트에서 프록시 서버로 데이터 전송</li>\n<li>프록시 서버에서 다시 웹 서버로 웹 응답</li>\n<li>웹 서버에서 프록시 서버로 웹 응답</li>\n<li>프록시 서버에서 클라이언트로 데이터 전송</li>\n</ol>\n<br/>\n<h3 id=\"프록시-서버의-사용-목적이유\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9D%EC%8B%9C-%EC%84%9C%EB%B2%84%EC%9D%98-%EC%82%AC%EC%9A%A9-%EB%AA%A9%EC%A0%81%EC%9D%B4%EC%9C%A0\" aria-label=\"프록시 서버의 사용 목적이유 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프록시 서버의 사용 목적(이유)</h3>\n<ul>\n<li>캐시 데이터를 사용하기 위함\n<ul>\n<li>프록시 서버 중 일부는 프록시 서버에 요청된 내용을 캐시를 사용해 저장해둔다. 그러면 캐시에 저장되어있는 내용에 대한 재요청은 서버에 따로 접속할 필요가 없어 저장된 내용을 그대로 돌려주면 되기 때문에 전송 시간을 절약할 수 있고 외부 트래픽을 줄임으로써 네트워크 병목 현상을 방지할 수 있다.</li>\n</ul>\n</li>\n<li>보안 목적\n<ul>\n<li>프론시 서버가 중간에 경유하게 되면 IP를 숨기는 것이 가능하기 때문이다.</li>\n<li>또한 프록시 서버를 방화벽으로 사용하기도 한다.(프록시 방화벽)</li>\n</ul>\n</li>\n<li>접속 우회\n<ul>\n<li>우회에 사용할 서버 주소와 포트를 구한 후 “인터넷 옵션 > 연결 > LAN설정 > 프록시 서버”에서 서버 주소와 포트를 설정해주면 설정해준 서버에서 접속한 것처럼 속일 수 있기 때문에 접속 제한을 우회할 수 있다.</li>\n</ul>\n</li>\n</ul>\n<br/>\n<h3 id=\"참고링크\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0%EB%A7%81%ED%81%AC\" aria-label=\"참고링크 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고링크</h3>\n<p><a href=\"https://ko.wikipedia.org/wiki/%ED%94%84%EB%A1%9D%EC%8B%9C_%EC%84%9C%EB%B2%84\">프록시 서버 - 위키백과, 우리 모두의 백과사전</a></p>\n<p><a href=\"https://liveyourit.tistory.com/251\">[네트워크] 프록시 서버란? 원리와 사용 목적</a></p>\n<p><a href=\"https://engineer-mole.tistory.com/288#recentEntries\">프록시(Proxy)란?</a></p>\n<br/>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%EA%B0%9C%EC%9A%94\">개요</a></li>\n<li><a href=\"#%ED%94%84%EB%A1%9D%EC%8B%9C-%EC%84%9C%EB%B2%84%EC%9D%98-%EC%9B%90%EB%A6%AC\">프록시 서버의 원리</a></li>\n<li><a href=\"#%ED%94%84%EB%A1%9D%EC%8B%9C-%EC%84%9C%EB%B2%84%EC%9D%98-%EC%82%AC%EC%9A%A9-%EB%AA%A9%EC%A0%81%EC%9D%B4%EC%9C%A0\">프록시 서버의 사용 목적(이유)</a></li>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0%EB%A7%81%ED%81%AC\">참고링크</a></li>\n</ul>\n</div>","excerpt":"개요 란 클라이언트가 자신을 거쳐 다른 네트워크에 접속할 수 있도록 해주는 서버를 말한다. 서버와 클라이언트 사이에서 대리로 통신을 라고 하고 그 기능을 하는 라 부르게 되는 것이다. 프록시 서버의 원리 프록시 서버는 서버와 클라이언트 사이에서 요청과 응답을 처리해주게 되는 것을 말하는데 클라이언트에서 프록시 서버로 데이터 전송 프록시 서버에서 다시 웹 서버로 웹 응답 웹 서버에서 프록시 서버로 웹 응답 프록시 서버에서 클라이언트로 데이터 전송 프록시 서버의 사용 목적(이유) 캐시 데이터를 사용하기 위함 프록시 서버 중 일부는 프록시 서버에 요청된 내용을 캐시를 사용해 저장해둔다. 그러면 캐시에 저장되어있는 내용에 대한 재요청은 서버에 따로 접속할 필요가 없어 저장된 내용을 그대로 돌려주면 되기 때문에 전송 시간을 절약할 수 있고 외부 트래픽을 줄임으로써 네트워크 병목 현상을 방지할 수 있다. 보안 목적 프론시 서버가 중간에 경유하게 되면 IP를 숨기는 것이 가능하기 때문이다. 또…","frontmatter":{"date":"December 11, 2022","title":"프록시 서버란? 원리와 사용 목적","categories":"개발지식","author":"JungSany","emoji":"📟"},"fields":{"slug":"/knowledge/proxy/"}},"next":{"id":"a5fa2fd5-33cf-5ec1-8492-934836504763","html":"<h2 id=\"정의\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EC%9D%98\" aria-label=\"정의 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정의</h2>\n<ul>\n<li>Object를 사용하여 Object를 생성하면 Object가 반환된다.</li>\n<li>이때 <code class=\"language-text\">할당, 반환된 Object를 인스턴스(instance)</code>라고 부른다.</li>\n<li>new 연산자를 사용하여 Object를 생성하여 변수에 할당할 수 있으며, 변수에 할당된 Object가 instance인 것이다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// new 연산자 또는 객체 리터럴 방식를 사용하여 Object를 생성하여,</span>\n<span class=\"token comment\">// 변수에 할당 or 반환된 Object가 instance이다.</span>\n<span class=\"token keyword\">const</span> obj1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> obj2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 콘솔에 찍히는 값은 Instance인 {}가 찍힌다.</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br/>\n<p><del>## instance를 사용하는 이유는?</del></p>\n<ul>\n<li><del>instance마다 다른 값을 유지/제어하기 위해서 instance를 생성하는 것이다.</del></li>\n<li><del>다시말해, 원본의 값을 그대로 사용하면 원본의 데이터가 변경되기 떄문에 instance를 생성하여 원본의 값을 건들지않고 사용하기 위해 instance를 생성하여 사용하는 것이다.</del></li>\n</ul>\n<br/>\n<h3 id=\"참고링크\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0%EB%A7%81%ED%81%AC\" aria-label=\"참고링크 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고링크</h3>\n<p><a href=\"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Object\">object MDN</a></p>\n<p><a href=\"https://webclub.tistory.com/37\">오브젝트(Object)와 인스턴스(instance),instanceof</a></p>\n<br/>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%EC%A0%95%EC%9D%98\">정의</a></p>\n<ul>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0%EB%A7%81%ED%81%AC\">참고링크</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"December 10, 2022","title":"Object와 instance의 차이점?","categories":"개발지식","author":"JungSany","emoji":"⚖️"},"fields":{"slug":"/knowledge/object-instance/"}},"prev":{"id":"7ad7d15d-6aa9-57ef-983b-cc153048b437","html":"<h3 id=\"cdn이란\" style=\"position:relative;\"><a href=\"#cdn%EC%9D%B4%EB%9E%80\" aria-label=\"cdn이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CDN이란?</h3>\n<ul>\n<li><strong>콘텐츠 전송 네트워크(CDN)는</strong> 데이터 사용량이 많은 애플리케이션의 웹 페이지 로드 속도를 높이는 상호 연결된 서버 네트워크</li>\n<li>동영상 또는 웹 사이트 이미지와 같은 대용량 파일을 로드하는 경우 시간이 오래 걸릴 수 있는데, 클라이언트와 웹 사이트 서버 간에 <code class=\"language-text\">CDN이라는 중간 서버</code>를 두어 효율성을 높일 수 있다.</li>\n<li>CDN 서버를 통해서 <code class=\"language-text\">웹 서버에 대한 웹 트래픽을 줄이고(콘텐츠 가용성 제고), 대역폭 소비를 줄이며(비용절감), 애플리케이션의 사용자 환경을 개선(페이지 로드 시간 단축), 웹 사이트 보안 강화</code> 를 할 수 있음</li>\n</ul>\n<br/>\n<h3 id=\"이미지-cdn의-url을-이용하여-최적화-옵션을-나타내는-방법\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EB%AF%B8%EC%A7%80-cdn%EC%9D%98-url%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%98%EC%97%AC-%EC%B5%9C%EC%A0%81%ED%99%94-%EC%98%B5%EC%85%98%EC%9D%84-%EB%82%98%ED%83%80%EB%82%B4%EB%8A%94-%EB%B0%A9%EB%B2%95\" aria-label=\"이미지 cdn의 url을 이용하여 최적화 옵션을 나타내는 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이미지 CDN의 URL을 이용하여 최적화 옵션을 나타내는 방법</h3>\n<p>이미지 CDN에서의 URL에는 이미지에 대한 변환 및 최적화에 대한 중요한 정보를 전달하게 되는데, URL의 형식은 보통 아래와 같다.</p>\n<p><img src=\"https://velog.velcdn.com/images%2Fhustle-dev%2Fpost%2Fafd1871e-e114-452b-a99b-6633331ce783%2Fimage.png\" alt=\"url 예시\"></p>\n<ul>\n<li>Origin: 도메인(자체 도메인 또는 이미지 CDN의 도메인이 있을 수 있다.)</li>\n<li>Image: 이미지(일반적으로 필요할 때 기존 위치에서 이미지를 자동으로 검색하도록 구성할 수 있다.)</li>\n<li>Security key: 이미지의 새 버전마다 고유한 보안 키를 필요로 하게하여, 다른 사람이 이미지의 새 버전을 만드는 것을 방지</li>\n<li>Transformations: 다양한 이미지 변환 제공(아래와 같이 매개변수를 기반으로 이미지 변화가 가능하다는 말로 생각할 수 있을 것 같다.)</li>\n</ul>\n<p><img src=\"https://web-dev.imgix.net/image/admin/OIF2VcXp8P6O7tQvw53B.jpg?auto=format&#x26;w=1600\" alt=\"dns서버 이미지 스타일링 예시\"></p>\n<br/>\n<h3 id=\"위-방법-외에-이미지-최적화-방법으로는-아래의-방법들이-있다\" style=\"position:relative;\"><a href=\"#%EC%9C%84-%EB%B0%A9%EB%B2%95-%EC%99%B8%EC%97%90-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EC%B5%9C%EC%A0%81%ED%99%94-%EB%B0%A9%EB%B2%95%EC%9C%BC%EB%A1%9C%EB%8A%94-%EC%95%84%EB%9E%98%EC%9D%98-%EB%B0%A9%EB%B2%95%EB%93%A4%EC%9D%B4-%EC%9E%88%EB%8B%A4\" aria-label=\"위 방법 외에 이미지 최적화 방법으로는 아래의 방법들이 있다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>위 방법 외에 이미지 최적화 방법으로는 아래의 방법들이 있다.</h3>\n<ul>\n<li>이미지 <code class=\"language-text\">폭</code>을 조절</li>\n<li>최적화된 이미지 <code class=\"language-text\">포맷</code>을 사용</li>\n<li><code class=\"language-text\">&lt;img></code>에 <code class=\"language-text\">width, height</code> 값을 선언해 <code class=\"language-text\">Reflow</code>를 방지</li>\n<li><code class=\"language-text\">여러 버전의 이미지</code>를 제공</li>\n<li>이미지 크기 조절 <code class=\"language-text\">툴</code>을 사용</li>\n<li><code class=\"language-text\">CSS Sprite</code> 기법을 사용</li>\n<li><code class=\"language-text\">lazy loading</code>을 활용</li>\n</ul>\n<br/>\n<h3 id=\"용어정리\" style=\"position:relative;\"><a href=\"#%EC%9A%A9%EC%96%B4%EC%A0%95%EB%A6%AC\" aria-label=\"용어정리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>용어정리</h3>\n<p><a href=\"https://rnfltpgus.github.io/knowledge/png-svg/\"><strong>PNG와 SVG</strong></a></p>\n<br/>\n<h3 id=\"참고링크\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0%EB%A7%81%ED%81%AC\" aria-label=\"참고링크 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고링크</h3>\n<p><a href=\"https://aws.amazon.com/ko/what-is/cdn/\">CDN이란 무엇인가요? - CDN 설명 - AWS</a></p>\n<p><a href=\"https://web.dev/i18n/ko/image-cdns/\">이미지 CDN을 사용하여 이미지 최적화</a></p>\n<p><a href=\"https://velog.io/@hustle-dev/%EC%9B%B9-%EC%84%B1%EB%8A%A5%EC%9D%84-%EC%9C%84%ED%95%9C-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EC%B5%9C%EC%A0%81%ED%99%94\">웹 성능을 위한 이미지 최적화</a></p>\n<br/>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#cdn%EC%9D%B4%EB%9E%80\">CDN이란?</a></li>\n<li><a href=\"#%EC%9D%B4%EB%AF%B8%EC%A7%80-cdn%EC%9D%98-url%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%98%EC%97%AC-%EC%B5%9C%EC%A0%81%ED%99%94-%EC%98%B5%EC%85%98%EC%9D%84-%EB%82%98%ED%83%80%EB%82%B4%EB%8A%94-%EB%B0%A9%EB%B2%95\">이미지 CDN의 URL을 이용하여 최적화 옵션을 나타내는 방법</a></li>\n<li><a href=\"#%EC%9C%84-%EB%B0%A9%EB%B2%95-%EC%99%B8%EC%97%90-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EC%B5%9C%EC%A0%81%ED%99%94-%EB%B0%A9%EB%B2%95%EC%9C%BC%EB%A1%9C%EB%8A%94-%EC%95%84%EB%9E%98%EC%9D%98-%EB%B0%A9%EB%B2%95%EB%93%A4%EC%9D%B4-%EC%9E%88%EB%8B%A4\">위 방법 외에 이미지 최적화 방법으로는 아래의 방법들이 있다.</a></li>\n<li><a href=\"#%EC%9A%A9%EC%96%B4%EC%A0%95%EB%A6%AC\">용어정리</a></li>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0%EB%A7%81%ED%81%AC\">참고링크</a></li>\n</ul>\n</div>","frontmatter":{"date":"December 11, 2022","title":"CDN 서버를 이용한 이미지 최적화","categories":"개발지식 최적화","author":"JungSany","emoji":"🎰"},"fields":{"slug":"/knowledge/dns-server-img/"}},"site":{"siteMetadata":{"siteUrl":"https://rnfltpgus.github.io","comments":{"utterances":{"repo":"rnfltpgus/rnfltpgus.github.io"}}}}},"pageContext":{"slug":"/knowledge/proxy/","nextSlug":"/knowledge/object-instance/","prevSlug":"/knowledge/dns-server-img/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}