{"componentChunkName":"component---src-templates-blog-template-js","path":"/knowledge/garbage-collection/","result":{"data":{"cur":{"id":"d085c067-b57b-5a28-8d5d-65d80c73fd19","html":"<h1 id=\"가비지-컬렉터란\" style=\"position:relative;\"><a href=\"#%EA%B0%80%EB%B9%84%EC%A7%80-%EC%BB%AC%EB%A0%89%ED%84%B0%EB%9E%80\" aria-label=\"가비지 컬렉터란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>가비지 컬렉터란?</h1>\n<ul>\n<li><code class=\"language-text\">자바스크립트 엔진이 내부적으로 사용하는 메모리 관리 시스템아다.</code></li>\n<li>자바스크립트는 우리가 사용하지 않는 값들에 대한 메모리 영역을 주기적으로 정리하고 불필요한 메모리 사용이 없도록 <strong><code class=\"language-text\">Garbage Collection</code>이라는 자동 메모리 관리방법을 통하여 관리한다.</strong></li>\n<li>성능에 예민한 상황에서 작업하는 경우를 제외하고, 일상반적인 상황에서는 <code class=\"language-text\">Garbage Collection</code>에 대해 크게 신경 쓰는 경우는 없다.</li>\n<li>하지만 이런 자동 메모리 관리는 잠재적 혼란의 원인을 일으키는 경우도 있다.</li>\n</ul>\n<br/>\n<h2 id=\"특징\" style=\"position:relative;\"><a href=\"#%ED%8A%B9%EC%A7%95\" aria-label=\"특징 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>특징</h2>\n<ul>\n<li><strong><code class=\"language-text\">클로저는 성능 관련 이슈나 메모리 누수의 가장 흔한 원인</code>이다.</strong></li>\n<li>생성된 함수가 주변 환경에 대한 값을 지속적으로 사용하고 있을 수 있으므로, <code class=\"language-text\">Garbage Collection에 의해 정리되지 않습니다.</code></li>\n</ul>\n<br/>\n<h2 id=\"참고링크\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0%EB%A7%81%ED%81%AC\" aria-label=\"참고링크 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고링크</h2>\n<p><a href=\"https://rnfltpgus.github.io/knowledge/treeshaing/\">트리 쉐이킹(Tree Shaking)</a></p>\n<p><a href=\"https://developer.mozilla.org/ko/docs/Web/JavaScript/Memory_Management\">MDN - 자바스크립트의 메모리 관리</a></p>\n<p><a href=\"https://ko.javascript.info/garbage-collection\">가비지 컬렉션 - 모던 JavaScript 튜토리얼</a></p>\n<br/>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%ED%8A%B9%EC%A7%95\">특징</a></li>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0%EB%A7%81%ED%81%AC\">참고링크</a></li>\n</ul>\n</div>","excerpt":"가비지 컬렉터란?  자바스크립트는 우리가 사용하지 않는 값들에 대한 메모리 영역을 주기적으로 정리하고 불필요한 메모리 사용이 없도록 이라는 자동 메모리 관리방법을 통하여 관리한다. 성능에 예민한 상황에서 작업하는 경우를 제외하고, 일상반적인 상황에서는 에 대해 크게 신경 쓰는 경우는 없다. 하지만 이런 자동 메모리 관리는 잠재적 혼란의 원인을 일으키는 경우도 있다. 특징 이다. 생성된 함수가 주변 환경에 대한 값을 지속적으로 사용하고 있을 수 있으므로,  참고링크 트리 쉐이킹(Tree Shaking) MDN - 자바스크립트의 메모리 관리 가비지 컬렉션 - 모던 JavaScript 튜토리얼 특징 참고링크","frontmatter":{"date":"December 28, 2022","title":"가비지 컬렉터(garbage collector)에 대해서","categories":"JavaScript 개발지식","author":"JungSany","emoji":"🗑️"},"fields":{"slug":"/knowledge/garbage-collection/"}},"next":{"id":"e5730785-362a-5c43-a9bd-c80dac7430b2","html":"<h1 id=\"v8-javascript-engine이란\" style=\"position:relative;\"><a href=\"#v8-javascript-engine%EC%9D%B4%EB%9E%80\" aria-label=\"v8 javascript engine이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>V8 JavaScript engine이란?</h1>\n<p><strong>C++로 작성된 Google의 오픈 소스 고성능 JavaScript 및 WebAssembly 엔진이다.</strong></p>\n<p><strong>Chrome 및 Node.js 등에서 사용된다.</strong></p>\n<p><strong>V8과 다른 엔진의 가장 큰 차이점은 V8 엔진의 <code class=\"language-text\">JIT(Just In Time)</code> 컴파일러다.</strong></p>\n<br/>\n<h2 id=\"jit-cjust-in-time-compiler\" style=\"position:relative;\"><a href=\"#jit-cjust-in-time-compiler\" aria-label=\"jit cjust in time compiler permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JIT-C(Just In Time Compiler)</h2>\n<p><img src=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&#x26;fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fb2Jzmc%2Fbtq56j9e47D%2FNPkxYsJWSRNgS7OrsGc9mK%2Fimg.png\" alt=\"JIT 이미지\"></p>\n<p><strong>일반적인 Compiler 방식에는 <code class=\"language-text\">동적 컴파일(interpreter)</code>과 <code class=\"language-text\">정적 컴파일(Compiler)</code>이 있다.</strong></p>\n<p><strong><code class=\"language-text\">JIT(Just In Time)은</code></strong> 이 두개의 컴파일 방식을 합친 것으로 실행시점에서 인터프리터 방식으로 바이트 코드를 생성한다.</p>\n<p>그 후 <strong><code class=\"language-text\">V8 Engine은</code></strong> 바이트 코드를 기계어 코드로 만들고, 그 코드를 캐싱하여, 같은 함수가 여러 번 불릴 때 매번 기계어 코드를 생성하는 것을 방지한다.</p>\n<br/>\n<h2 id=\"v8의-컴파일-과정\" style=\"position:relative;\"><a href=\"#v8%EC%9D%98-%EC%BB%B4%ED%8C%8C%EC%9D%BC-%EA%B3%BC%EC%A0%95\" aria-label=\"v8의 컴파일 과정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>V8의 컴파일 과정</h2>\n<p><img src=\"https://miro.medium.com/max/700/1*F0lz3L4l9n6W-O2ivkvjtg.jpeg\" alt=\"V8의 컴파일 과정 이미지\"></p>\n<ol>\n<li>Blink에서 <code class=\"language-text\">script 태그</code>를 만나면, Javascript 스트리밍을 시작한다.</li>\n<li>스트리밍으로 전달 받은 UTF-16 문자열은 Scanner를 이용해 Token(let, for)을 생성한다.</li>\n<li>생성된 Token을 가지고, Parser가 추상 구문 트리 (AST)를 만든다.</li>\n<li>만들어진 AST는 Ignition(Compiler)에서 Byte Code로 컴파일한다.</li>\n<li>컴파일된 Byte Code를 실행함으로써 원하는 Javascript 동작이 실행된다.</li>\n</ol>\n<br/>\n<h2 id=\"용어사전\" style=\"position:relative;\"><a href=\"#%EC%9A%A9%EC%96%B4%EC%82%AC%EC%A0%84\" aria-label=\"용어사전 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>용어사전</h2>\n<p><strong>인터프리터(interpreter)</strong> : 한줄읽고 실행하는 방식으로, 동일한 동작을 하는 함수가 여러번 나오더라도 이를 컴파일 하는 과정을 거치게 한다. 따라서 이는 <code class=\"language-text\">매우 비효율적</code>이다. 하지만 <code class=\"language-text\">디버깅에 유리</code>할 수 있다. <code class=\"language-text\">V8</code>은 <code class=\"language-text\">JIT Compiler</code>을 지원하는데 인터프리터 방식의 비효율적인 방법을 방지하게 만든다.</p>\n<p><strong>컴파일러(compiler)</strong> : 특정 프로그래밍 언어로 쓰여 있는 문서를 다른 프로그래밍 언어로 옮기는 언어 번역 프로그램으로 코드를 실행하기 전에 소스코드 전체를 컴파일 한다. 이는 개발 편의성은 떨어지지만, 실행 속도는 높을 수 있다.</p>\n<p><strong>JIT 컴파일(just in time compilation) 또는 동적 번역(dynamic translation)</strong> : 프로그램을 실제 실행하는 시점에 기계어로 번역하는 컴파일 기법이며, V8 엔진에서 기용하는 기법</p>\n<p><strong>AST(Abstract Syntax Tree)</strong> : 프로그래밍 언어로 작성된 소스 코드의 추상 구문 구조의 트리로, 각 노드는 소스 코드에서 발생되는 구조를 나타낸다.</p>\n<p><strong>TurboFan JIT Compiler</strong> : 바이트 코드를 실행하면서 Profiler는 최적화(Optimizes)가 가능한 부분을 찾아서 기록해둔다. (<strong>자주 쓰이는 변수나 함수, 최적화 방법으로는</strong> <code class=\"language-text\">히든 클래스</code>, <code class=\"language-text\">인라인 캐싱</code>이 있다.)</p>\n<br/>\n<h2 id=\"참고링크\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0%EB%A7%81%ED%81%AC\" aria-label=\"참고링크 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고링크</h2>\n<p><a href=\"https://v8.dev/\">V8</a></p>\n<p><a href=\"https://v8.dev/blog/ignition-interpreter\">Firing up the Ignition interpreter</a></p>\n<p><a href=\"https://hwan-shell.tistory.com/343\">V8 Engine에 대해서…(메모리구조, 컴파일방식)</a></p>\n<p><a href=\"https://ui.toast.com/posts/ko_20210909\">자바스크립트 성능의 비밀 (V8과 히든 클래스)</a></p>\n<p><a href=\"https://youtu.be/r5OWCtuKiAk\">BlinkOn 6 Day 1 Talk 2: Ignition - an interpreter for V8</a></p>\n<p><a href=\"https://pks2974.medium.com/v8-%EC%97%90%EC%84%9C-javascript-%EC%BD%94%EB%93%9C%EB%A5%BC-%EC%8B%A4%ED%96%89%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95-%EC%A0%95%EB%A6%AC%ED%95%B4%EB%B3%B4%EA%B8%B0-25837f61f551\">V8 에서 Javascript 코드를 실행하는 방법 정리해보기</a></p>\n<p><a href=\"https://deepu.tech/memory-management-in-v8/\">🚀 Visualizing memory management in V8 Engine (JavaScript, NodeJS, Deno, WebAssembly)</a></p>\n<p><a href=\"https://ko.javascript.info/garbage-collection\">가비지 컬렉션 - 모던 JavaScript 튜토리얼</a></p>\n<br/>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#jit-cjust-in-time-compiler\">JIT-C(Just In Time Compiler)</a></li>\n<li><a href=\"#v8%EC%9D%98-%EC%BB%B4%ED%8C%8C%EC%9D%BC-%EA%B3%BC%EC%A0%95\">V8의 컴파일 과정</a></li>\n<li><a href=\"#%EC%9A%A9%EC%96%B4%EC%82%AC%EC%A0%84\">용어사전</a></li>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0%EB%A7%81%ED%81%AC\">참고링크</a></li>\n</ul>\n</div>","frontmatter":{"date":"December 28, 2022","title":"V8 JavaScript engine에 대해서","categories":"JavaScript 개발지식","author":"JungSany","emoji":"🌐"},"fields":{"slug":"/knowledge/v8-engine/"}},"prev":{"id":"13444a7c-80ca-5dc3-8fb4-dae7e0191b72","html":"<h1 id=\"반응형-웹이란\" style=\"position:relative;\"><a href=\"#%EB%B0%98%EC%9D%91%ED%98%95-%EC%9B%B9%EC%9D%B4%EB%9E%80\" aria-label=\"반응형 웹이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>반응형 웹이란?</h1>\n<blockquote>\n<p><strong>Google Developers</strong></p>\n<p>반응형 웹 레이아웃은 기기의 크기와 기능에 따라 변합니다.</p>\n<p>예를 들어, 휴대폰에서는 콘텐츠가 하나의 column으로 표시될 수 있지만 태블릿에서는 두 개의 column으로 표시될 수 있습니다.</p>\n</blockquote>\n<ul>\n<li><code class=\"language-text\">반응형 웹</code>은 <code class=\"language-text\">다양한 크기</code>를 가진 <code class=\"language-text\">기기</code>들에서 웹 페이지의 <code class=\"language-text\">UI를 의도대로 잘 보이도록</code> 하기 위한 기술로</li>\n<li>HTML과 CSS만을 사용해서 반응형 웹 설계가 가능하며,</li>\n<li>다양한 기기를 사용하는 모든 사용자에게 UX를 선사하기 위한 설계 방식이다.\n<ul>\n<li>다양한 기기에서 웹 UI를 의도한 대로 보여주고,</li>\n<li>의도한 대로 동작하는 웹 페이지를 설계하기 위함이다.</li>\n</ul>\n</li>\n</ul>\n<br/>\n<h2 id=\"반응형-웹을-설계하기-위한-핵심기술\" style=\"position:relative;\"><a href=\"#%EB%B0%98%EC%9D%91%ED%98%95-%EC%9B%B9%EC%9D%84-%EC%84%A4%EA%B3%84%ED%95%98%EA%B8%B0-%EC%9C%84%ED%95%9C-%ED%95%B5%EC%8B%AC%EA%B8%B0%EC%88%A0\" aria-label=\"반응형 웹을 설계하기 위한 핵심기술 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>반응형 웹을 설계하기 위한 핵심기술</h2>\n<ol>\n<li>가변 그리드(Fluid Grid)</li>\n</ol>\n<ul>\n<li><code class=\"language-text\">유동형 그리드</code>라고 부르기도 한다.</li>\n<li><strong>그리드란? 디자인에서 내용을 구성하는데 사용되는 일련의 직선 또는 곡선이 교차하는 구조를 의미한다.</strong></li>\n<li>설계자가 그래픽 요소를 합리적이고 흡수하기 쉬운 방식으로 구성할 수 있는 뼈대이자 프레임워크의 역할을 한다.</li>\n<li><strong>전체 <code class=\"language-text\">UI</code>에 <code class=\"language-text\">통일성을 부여</code>하고 <code class=\"language-text\">일관된 디자인을 유지하여 화면의 전체적인 균형을 맞출 수 있어 더욱 견고한 디자인을 제공</code>할 수 있다.</strong></li>\n<li>이는 <strong>사용자에게 전문적이고 신뢰성과 안정감을 제공</strong>할 수 있다.</li>\n<li><strong><code class=\"language-text\">px</code>과 같이 <code class=\"language-text\">고정된 단위가 아니라</code> 상황에 맞게 변할 수 있는 단위인 <code class=\"language-text\">em</code>이나 <code class=\"language-text\">%</code>를 <code class=\"language-text\">사용하여 브라우저 크기에 따라 유동적으로 변할 수 있게 한다.</code></strong></li>\n</ul>\n<ol start=\"2\">\n<li>\n<p>유연한 이미지(Flexible Images)</p>\n</li>\n<li>\n<p><a href=\"https://rnfltpgus.github.io/knowledge/responsive-web/media-query/\">미디어 쿼리(Media Query)</a></p>\n</li>\n</ol>\n<br/>\n<h2 id=\"반응형-웹의-장점과-단점\" style=\"position:relative;\"><a href=\"#%EB%B0%98%EC%9D%91%ED%98%95-%EC%9B%B9%EC%9D%98-%EC%9E%A5%EC%A0%90%EA%B3%BC-%EB%8B%A8%EC%A0%90\" aria-label=\"반응형 웹의 장점과 단점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>반응형 웹의 장점과 단점</h2>\n<h3 id=\"장점\" style=\"position:relative;\"><a href=\"#%EC%9E%A5%EC%A0%90\" aria-label=\"장점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>장점</h3>\n<ol>\n<li>디바이스 기기의 호환한다.</li>\n<li>도메인 구분없는 동일한 URL을 사용할 수 있다.</li>\n<li>간편한 유지보수와 모니터링할 수 있다.</li>\n</ol>\n<br/>\n<h3 id=\"단점\" style=\"position:relative;\"><a href=\"#%EB%8B%A8%EC%A0%90\" aria-label=\"단점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>단점</h3>\n<ol>\n<li>많은 컨텐츠를 보여주기에는 한계가 있다.</li>\n<li>로딩속도가 느려질 수 있다.</li>\n<li>레이아웃 변경이 어렵다.</li>\n</ol>\n<br/>\n<h2 id=\"정리\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EB%A6%AC\" aria-label=\"정리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정리</h2>\n<p><strong>시간이 지나면서 사람들이 다양한 기기, 다양한 접속 방법을 통해 웹 페이지나 서비스를 이용하게 된다.</strong></p>\n<p><strong>기획자나 개발자라면 다양한 시각에서 생각을 하고, <code class=\"language-text\">어떤 용도로 활용될 서비스인가? or 서비스의 특성이 무엇인가?</code>를 파악한 후 상황에 알맞는 반응형 설계방식을 선택하여 구축해야 된다고 생각이 들었다.</strong></p>\n<br/>\n<h2 id=\"참고링크\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0%EB%A7%81%ED%81%AC\" aria-label=\"참고링크 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고링크</h2>\n<p><a href=\"https://web.dev/responsive-web-design-basics/\">반응형 웹 디자인 기초</a></p>\n<p><a href=\"https://yozm.wishket.com/magazine/detail/883/\">반응형 웹, 개념 이해하기</a></p>\n<p><a href=\"http://wiki.hash.kr/index.php/%EB%B0%98%EC%9D%91%ED%98%95%EC%9B%B9\">해시넷 - 반응형웹</a></p>\n<br/>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%EB%B0%98%EC%9D%91%ED%98%95-%EC%9B%B9%EC%9D%84-%EC%84%A4%EA%B3%84%ED%95%98%EA%B8%B0-%EC%9C%84%ED%95%9C-%ED%95%B5%EC%8B%AC%EA%B8%B0%EC%88%A0\">반응형 웹을 설계하기 위한 핵심기술</a></p>\n</li>\n<li>\n<p><a href=\"#%EB%B0%98%EC%9D%91%ED%98%95-%EC%9B%B9%EC%9D%98-%EC%9E%A5%EC%A0%90%EA%B3%BC-%EB%8B%A8%EC%A0%90\">반응형 웹의 장점과 단점</a></p>\n<ul>\n<li><a href=\"#%EC%9E%A5%EC%A0%90\">장점</a></li>\n<li><a href=\"#%EB%8B%A8%EC%A0%90\">단점</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%A0%95%EB%A6%AC\">정리</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%B0%B8%EA%B3%A0%EB%A7%81%ED%81%AC\">참고링크</a></p>\n</li>\n</ul>\n</div>","frontmatter":{"date":"December 29, 2022","title":"Responsive Wep 이란?","categories":"개발지식 ResponsiveWep","author":"JungSany","emoji":"🎨"},"fields":{"slug":"/knowledge/responsive-web/"}},"site":{"siteMetadata":{"siteUrl":"https://rnfltpgus.github.io","comments":{"utterances":{"repo":"rnfltpgus/rnfltpgus.github.io"}}}}},"pageContext":{"slug":"/knowledge/garbage-collection/","nextSlug":"/knowledge/v8-engine/","prevSlug":"/knowledge/responsive-web/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}