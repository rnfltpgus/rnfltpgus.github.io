{"componentChunkName":"component---src-templates-blog-template-js","path":"/knowledge/semantic-markup/","result":{"data":{"cur":{"id":"3853e330-0849-53e1-aa61-0d5ca840bfe7","html":"<p><strong>시맨틱(Semantic)이란 ‘의미론적인’의 뜻을 가지며 마크업(Markup)이란 HTML 태그로 문서를 작성하는 것을 말함</strong></p>\n<br/>\n<h2 id=\"시멘틱-마크업이란\" style=\"position:relative;\"><a href=\"#%EC%8B%9C%EB%A9%98%ED%8B%B1-%EB%A7%88%ED%81%AC%EC%97%85%EC%9D%B4%EB%9E%80\" aria-label=\"시멘틱 마크업이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>시멘틱 마크업이란?</h2>\n<p><strong>의미를 잘 전달하도록 문서를 작성하는 것을 말함</strong></p>\n<p><img src=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&#x26;fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbI9UPv%2Fbtrc8hXFHt1%2FVBEgspsee8UWIQMqJTZEJ1%2Fimg.png\" alt=\"시멘틱 마크업 예시 - 1\"></p>\n<p><img src=\"https://blog.kakaocdn.net/dn/qpLEl/btrdffRp9SN/E9Z5l2D9U0IaI6uMxTlJ9k/img.png\" alt=\"시멘틱 마크업 예시 - 2\"></p>\n<br/>\n<h2 id=\"잘-구성하기-위해서는\" style=\"position:relative;\"><a href=\"#%EC%9E%98-%EA%B5%AC%EC%84%B1%ED%95%98%EA%B8%B0-%EC%9C%84%ED%95%B4%EC%84%9C%EB%8A%94\" aria-label=\"잘 구성하기 위해서는 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>잘 구성하기 위해서는?</h2>\n<p><strong>각 태그가 그 용도에 맞게 사용되어야 한다.</strong></p>\n<ul>\n<li>헤더/푸터에 <code class=\"language-text\">&lt;header></code>와 <code class=\"language-text\">&lt;footer></code> 사용</li>\n<li>메인 컨텐츠에 <code class=\"language-text\">&lt;main></code>과 <code class=\"language-text\">&lt;section></code> 사용</li>\n<li>독립적인 컨텐츠에 <code class=\"language-text\">&lt;article></code> 사용</li>\n<li>최상위 제목으로 <code class=\"language-text\">&lt;h1></code> 사용</li>\n<li>순서가 없는 목록으로 <code class=\"language-text\">&lt;ul></code>과 <code class=\"language-text\">&lt;li></code> 사용</li>\n<li>내비게이션에 <code class=\"language-text\">&lt;nav></code>사용\n<ul>\n<li>예를 들어, 동일한 효과를 부여하는 <code class=\"language-text\">&lt;strong></code>과 <code class=\"language-text\">&lt;b></code> 태그가 있다.</li>\n<li>둘은 동일하게 글자색을 진하게 하지만 <code class=\"language-text\">&lt;b></code> 태그의 경우는 그 자체가 “bold”의 약어이기 때문에 태그 자체가 스타일을 가진다고 할 수 있다.</li>\n<li>하지만 <code class=\"language-text\">&lt;strong></code>의 경우에는 “그 안의 내용이 다른 내용보다 더 강조되어야 한다”라는 의미를 가지기 때문에 시맨틱 마크업에 더 적합하다.</li>\n</ul>\n</li>\n</ul>\n<br/>\n<h2 id=\"시맨틱-마크업이-잘-이루어-진다면\" style=\"position:relative;\"><a href=\"#%EC%8B%9C%EB%A7%A8%ED%8B%B1-%EB%A7%88%ED%81%AC%EC%97%85%EC%9D%B4-%EC%9E%98-%EC%9D%B4%EB%A3%A8%EC%96%B4-%EC%A7%84%EB%8B%A4%EB%A9%B4\" aria-label=\"시맨틱 마크업이 잘 이루어 진다면 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>시맨틱 마크업이 잘 이루어 진다면?</h2>\n<ul>\n<li>검색엔진이 시맨틱 태그를 중요한 키워드로 간주하기 때문에 <strong>검색엔진 최적화(SEO)에 유리하다.</strong></li>\n<li><strong>웹 접근성</strong> 측면에서, 시각장애가 있는 사용자로 하여금 그 의미를 훨씬 잘 파악할 수 있다.</li>\n<li>단순한 div, span으로 둘러싸인 요소들보다 코드를 볼 때 <strong>가독성이 좋다.</strong></li>\n</ul>\n<br/>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%EC%8B%9C%EB%A9%98%ED%8B%B1-%EB%A7%88%ED%81%AC%EC%97%85%EC%9D%B4%EB%9E%80\">시멘틱 마크업이란?</a></li>\n<li><a href=\"#%EC%9E%98-%EA%B5%AC%EC%84%B1%ED%95%98%EA%B8%B0-%EC%9C%84%ED%95%B4%EC%84%9C%EB%8A%94\">잘 구성하기 위해서는?</a></li>\n<li><a href=\"#%EC%8B%9C%EB%A7%A8%ED%8B%B1-%EB%A7%88%ED%81%AC%EC%97%85%EC%9D%B4-%EC%9E%98-%EC%9D%B4%EB%A3%A8%EC%96%B4-%EC%A7%84%EB%8B%A4%EB%A9%B4\">시맨틱 마크업이 잘 이루어 진다면?</a></li>\n</ul>\n</div>","excerpt":"시맨틱(Semantic)이란 ‘의미론적인’의 뜻을 가지며 마크업(Markup)이란 HTML 태그로 문서를 작성하는 것을 말함 시멘틱 마크업이란? 의미를 잘 전달하도록 문서를 작성하는 것을 말함 시멘틱 마크업 예시 - 1 시멘틱 마크업 예시 - 2 잘 구성하기 위해서는? 각 태그가 그 용도에 맞게 사용되어야 한다. 헤더/푸터에 와  사용 메인 컨텐츠에 과  사용 독립적인 컨텐츠에  사용 최상위 제목으로  사용 순서가 없는 목록으로 과  사용 내비게이션에 사용 예를 들어, 동일한 효과를 부여하는 과  태그가 있다. 둘은 동일하게 글자색을 진하게 하지만  태그의 경우는 그 자체가 “bold”의 약어이기 때문에 태그 자체가 스타일을 가진다고 할 수 있다. 하지만 의 경우에는 “그 안의 내용이 다른 내용보다 더 강조되어야 한다”라는 의미를 가지기 때문에 시맨틱 마크업에 더 적합하다. 시맨틱 마크업이 잘 이루어 진다면? 검색엔진이 시맨틱 태그를 중요한 키워드로 간주하기 때문에 검색엔진 최적화…","frontmatter":{"date":"December 23, 2022","title":"Semantic Markup 이란?","categories":"개발지식","author":"JungSany","emoji":"🏗️"},"fields":{"slug":"/knowledge/semantic-markup/"}},"next":{"id":"d437a0df-b302-52f5-a337-dc0e63758979","html":"<h2 id=\"pwa란\" style=\"position:relative;\"><a href=\"#pwa%EB%9E%80\" aria-label=\"pwa란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>PWA란?</h2>\n<ul>\n<li>네이티브 앱을 개발하고 유지보수하는 것은 상당히 길고 복잡한 과정을 거치며, 상당한 비용이 발생한다. 그래서 웹에서 사용하는 기술과 네이티브 앱의 장점을 결합한 것이 <code class=\"language-text\">프로그레시브 웹 앱(Progressive Web App)</code>이다.</li>\n<li>PWA는 HTML, CSS, Javascript와 같은 웹 기술로 만들어지며, 대표적인 예시 케이스로는 트위터, 스타벅스, 우버 등이 있다.</li>\n</ul>\n<br/>\n<h2 id=\"주요-구성요소\" style=\"position:relative;\"><a href=\"#%EC%A3%BC%EC%9A%94-%EA%B5%AC%EC%84%B1%EC%9A%94%EC%86%8C\" aria-label=\"주요 구성요소 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>주요 구성요소</h2>\n<p>PWA의 주요 구성요소 3가지는 보안 연결, 서비스 작업자, 매니페스트 파일이 있다.</p>\n<ul>\n<li><strong>보안 연결(HTTPS): PWA는 신뢰할 수 있는 연결 상태에서만 동작하기 때문에, 보안 연결을 통해서 서비스를 제공해야 한다.</strong>\n<ul>\n<li>이건 단지 보안상의 이유 때문만은 아니고, 사용자들의 신뢰를 얻기 위해서도 아주 중요한 부분</li>\n</ul>\n</li>\n<li><strong>서비스 작업자(service worker): 서비스 작업자는 백그라운드에서 실행되는 스크립트</strong>\n<ul>\n<li>서비스 작업자는 네트워크와 관련된 요청의 처리를 도와주기 때문에, 복잡한 작업을 수행할 수 있음</li>\n</ul>\n</li>\n<li><strong>매니페스트 파일(manifest file, 설정 파일)</strong>: 제이슨(JSON, 용량이 적은 데이터를 교환하기 위한 형식) 파일이며, <strong>PWA가 표시되고 기능하는 방식에 대한 정보들이 포함되어 있다.</strong>\n<ul>\n<li>여기에서는 PWA의 이름, 설명, 아이콘, 색상 등을 지정할 수 있음</li>\n</ul>\n</li>\n</ul>\n<br/>\n<h2 id=\"장단점\" style=\"position:relative;\"><a href=\"#%EC%9E%A5%EB%8B%A8%EC%A0%90\" aria-label=\"장단점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>장/단점</h2>\n<h3 id=\"장점\" style=\"position:relative;\"><a href=\"#%EC%9E%A5%EC%A0%90\" aria-label=\"장점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>장점</h3>\n<ul>\n<li>앱스토어에 출시하기 위해 별도의 프로세스를 거치지 않아도 된다.</li>\n<li>웹으로 만들어진 것에 대해 적은 리소스를 투입하여, 앱으로 띄우며 비용이 저렴하고 유지관리해야하는 코드베이스가 적다.</li>\n<li>오프라인에서도 동작한다.</li>\n<li><strong>PWA는 시멘틱 마크업을 사용할 수 있어, 검색엔진 최적화(SEO)가 좋아 사용자들의 높은 참여를 이끌어 낼 수 있음(RN의 경우 앱스토어 최적화(ASO))</strong></li>\n<li>배포시, 번거로운 절차들을 비켜갈 수 있다.</li>\n<li>앱스토어가 필요하지 않고, 설치 또한 필요하지 않다.</li>\n</ul>\n<br/>\n<h3 id=\"단점\" style=\"position:relative;\"><a href=\"#%EB%8B%A8%EC%A0%90\" aria-label=\"단점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>단점</h3>\n<ul>\n<li><strong>네이티브 앱과 비슷하다고 하지만 네이티브의 성능을 따라갈 수 없다.</strong></li>\n<li>네이티브의 기능을 모두 사용할 수 없고, OS에서 지원하지 않는 기능이라면 PWA에서도 사용할 수 없다.</li>\n<li>서비스 작업자의 API(응용프로그램 인터페이스)를 지원하는 환경이 플랫폼마다 상이하여, 푸시 알림을 사용하는 부분에서 불편하다.</li>\n</ul>\n<br/>\n<h2 id=\"결론\" style=\"position:relative;\"><a href=\"#%EA%B2%B0%EB%A1%A0\" aria-label=\"결론 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>결론</h2>\n<p><strong>네이티브 앱이나 PWA는 모두 매끄러운 사용자 경험(UX)를 제공하기 위한 방식으로 각자 나름의 장단점이 있지만 진행해야되는 프로젝트의 목표와 현재 가진 자원을 고려하여 선택해야될 것 같다.</strong></p>\n<br/>\n<h2 id=\"참고링크\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0%EB%A7%81%ED%81%AC\" aria-label=\"참고링크 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고링크</h2>\n<p><a href=\"https://blog.wishket.com/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%A0%88%EC%8B%9C%EB%B8%8C-%EC%9B%B9-%EC%95%B1pwa%EC%9D%B4%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B4%EB%A9%B0-%EC%99%9C-%ED%95%84%EC%9A%94%ED%95%9C%EA%B0%80/\">프로그레시브 웹 앱(PWA)이란 무엇이며, 왜 필요한가? - wishket</a></p>\n<p><a href=\"https://blog.wishket.com/pwa-vs-%EB%84%A4%EC%9D%B4%ED%8B%B0%EB%B8%8C-%EC%95%B1-%EC%96%B4%EB%96%A4-%EA%B2%83%EC%9D%84-%EC%84%A0%ED%83%9D%ED%95%B4%EC%95%BC-%ED%95%A0%EA%B9%8C/\">PWA vs 네이티브 앱, 어떤 것을 선택해야 할까?</a></p>\n<br/>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#pwa%EB%9E%80\">PWA란?</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%A3%BC%EC%9A%94-%EA%B5%AC%EC%84%B1%EC%9A%94%EC%86%8C\">주요 구성요소</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%9E%A5%EB%8B%A8%EC%A0%90\">장/단점</a></p>\n<ul>\n<li><a href=\"#%EC%9E%A5%EC%A0%90\">장점</a></li>\n<li><a href=\"#%EB%8B%A8%EC%A0%90\">단점</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EA%B2%B0%EB%A1%A0\">결론</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%B0%B8%EA%B3%A0%EB%A7%81%ED%81%AC\">참고링크</a></p>\n</li>\n</ul>\n</div>","frontmatter":{"date":"December 23, 2022","title":"PWA에 대하여","categories":"개발지식","author":"JungSany","emoji":"📱"},"fields":{"slug":"/knowledge/pwa/"}},"prev":{"id":"cd6480a3-5ef4-56e9-bdb2-b70d22f2698d","html":"<h1 id=\"리액트란\" style=\"position:relative;\"><a href=\"#%EB%A6%AC%EC%95%A1%ED%8A%B8%EB%9E%80\" aria-label=\"리액트란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>리액트란?</h1>\n<p>Facebook에서 주도하여 개발한 <code class=\"language-text\">웹 어플리케이션의 UI를 효과적</code>으로 구축하기 위해 사용하는 <code class=\"language-text\">Javascript 기반</code> 라이브러리이다.</p>\n<p><code class=\"language-text\">React</code> 자체는 framework라 부를 수 있는 기준인 라우팅, 상태관리 기본 제공을 충족하지 못하기 때문에 <code class=\"language-text\">라이브러리이지만, React의 생태계는 framework</code>다.</p>\n<br/>\n<h2 id=\"react가-등장하게-된-이유는\" style=\"position:relative;\"><a href=\"#react%EA%B0%80-%EB%93%B1%EC%9E%A5%ED%95%98%EA%B2%8C-%EB%90%9C-%EC%9D%B4%EC%9C%A0%EB%8A%94\" aria-label=\"react가 등장하게 된 이유는 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React가 등장하게 된 이유는</h2>\n<p>이전에는 어프리케이션의 UI를 제어하기 위해서는 DOM을 변경시키기 위해 설정을 DOM을 선택하고 어떤 이벤트가 발생하면 변화를 주도록 설정을 해야했다.</p>\n<p>유저와 상호작용이 많이 없는 웹 서비스에서는 상관이 크게 없었지만, 인터렉션이 자주 발생하고 변화가 많은 어플리케이션의 경우 힘들었고 코드 또한 난잡해지는 경우가 많이 생기게 되었다.</p>\n<br/>\n<h2 id=\"react의-특징은\" style=\"position:relative;\"><a href=\"#react%EC%9D%98-%ED%8A%B9%EC%A7%95%EC%9D%80\" aria-label=\"react의 특징은 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React의 특징은</h2>\n<p><strong>1. 선언적(Declarative)</strong></p>\n<ul>\n<li>대화형 UI를 작성하기에 유리하다. 데이터가 변경되었을 때 효율적으로 렌더링을 수행할 수 있도록 한다.</li>\n</ul>\n<p><strong>2. 컴포넌트 기반(Component-based)</strong></p>\n<ul>\n<li>캡슐화된 컴포넌트가 스스로 상태를 관리하고 복잡한 UI도 효과적으로 구성할 수 있다.</li>\n</ul>\n<p><strong>3. 한 번 배워서 어디에서나 사용 가능(Learn Once, Write Anywhere)</strong></p>\n<ul>\n<li>기존 소스를 불필요하게 다시 작성하지 않고 새 기능을 개발할 수 있다.</li>\n<li>컴포넌트를 재사용할 수 있다.</li>\n</ul>\n<p><strong>4. Virtual DOM을 사용한다.</strong></p>\n<ul>\n<li>실제 DOM과 같은 내용을 담고 있는 복사본의 DOM을 사용한다.(복사본은 자바스크립트 객체 형태로 메모리상에 저장되어 있음)</li>\n<li>리엑트는 항상 두 개의 가상돔을 가지고 있다.(하나는 변경 이전의 내용을 담고 있고, 하나는 변경 이후에 보여질 내용을 담고 있음)</li>\n</ul>\n<br/>\n<h2 id=\"장단점\" style=\"position:relative;\"><a href=\"#%EC%9E%A5%EB%8B%A8%EC%A0%90\" aria-label=\"장단점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>장단점</h2>\n<ul>\n<li>\n<p>장점</p>\n<ul>\n<li>\n<p>Component 하나로 관리가 가능하다.</p>\n</li>\n<li>\n<p>재사용성이 좋으며, 유지보수의 용이함, 그리고 코드 가독성을 높일 수 있다.</p>\n</li>\n<li>\n<p>성능이 뛰어난 가비지 컬랙터, 메모리 관리 기능을 지원한다.</p>\n</li>\n<li>\n<p>Component 단위로 UI 수정이 수월하다.</p>\n</li>\n<li>\n<p>다른 framework나 라이브러리와 병행하여 사용이 가능하다. (이미 개발이 완료된 프로젝트에도 적절히 녹여내어 사용할 수 있는 확장성을 가지고 있다.)</p>\n</li>\n<li>\n<p>Virtual DOM의 존재</p>\n<ul>\n<li>\n<p>React 컴포넌트가 리턴하는 값에 의해 만들어져 실제 보이고 있는 DOM과 비교해서 달라진 부위만 찾아내 바꾸게 된다.</p>\n<p>(컴포넌트 단위의 개발이 가능함)</p>\n</li>\n</ul>\n</li>\n<li>\n<p>React Native의 앱 개발 가능</p>\n<ul>\n<li>웹과 앱이 엄청난 연관성이 있어, React의 하나의 프로젝트만 잘끝나도 React Native로 App을 만드는 리소스가 덜 든다.</li>\n</ul>\n</li>\n<li>\n<p>수 많은 커뮤니티 정보</p>\n<ul>\n<li>막히는 부분과 오류에 대한 내용을 많은 커뮤니티를 통해서 극복이 가능함(다른 웹 프레임워크보다 커뮤니티가 활성화 되어 있음)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>단점</p>\n<ul>\n<li>로딩시간이 길다.</li>\n<li>보여지는 부분에만 관여하기때문에 데이터 모델링, Routing, Ajax 등등의 기능을 제공하지 않는다.</li>\n<li>view 외 기능들은 직접 구현하거나 라이브러리를 사용하여 구현해야 하기 때문에 JavaScript 배경지식이 부족할 경우에는 사용이 힘들다.</li>\n<li>IE8 이하 버전들을 지원하지 않는다.</li>\n<li>SPA특성상 초기에 모든걸 렌더링 후에 웹페이지가 뜬다. 그 과정이 느리다.</li>\n</ul>\n</li>\n</ul>\n<br/>\n<h2 id=\"작동원리-재조정reconciliation-일어나는-원리\" style=\"position:relative;\"><a href=\"#%EC%9E%91%EB%8F%99%EC%9B%90%EB%A6%AC-%EC%9E%AC%EC%A1%B0%EC%A0%95reconciliation-%EC%9D%BC%EC%96%B4%EB%82%98%EB%8A%94-%EC%9B%90%EB%A6%AC\" aria-label=\"작동원리 재조정reconciliation 일어나는 원리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>작동원리, 재조정(Reconciliation) 일어나는 원리</h2>\n<p><img src=\"https://miro.medium.com/max/1400/1*JCrDk-N-wpPnE9j0GObItg.webp\" alt=\"리액트 재조정 이미지\"></p>\n<p><strong>React는 컴포넌트에서 prop이나 state가 변경될 때, 직전에 렌더링된 요소(원본 가상DOM)와 새로 반환된 요소(변경된 가상 DOM)를 비교하여 실제 DOM을 업데이트 할지 말지 결정해야 한다. 이 때 두 요소가 일치하지 않으면, React는 새로운 요소로 DOM을 업데이트 하는데, 이러한 <code class=\"language-text\">프로세스를 재조정(Reconciliation)</code>이라고 한다.</strong></p>\n<p><strong>React는 <code class=\"language-text\">Virtual DOM을 사용</code>하여 효과적인 방법으로 UI를 빠르게 랜더링한다. 또 <a href=\"https://rnfltpgus.github.io/react/flux-architecture/\">단반향 데이터 흐름(Flux)</a>를 갖는다.</strong></p>\n<p><strong>상태가 변경된 부분은 Diffing 알고리즘을 통해 파악하고, <code class=\"language-text\">Batch Update를 수행한다.</code> (16버전 이후로 부터는 Fiber 알고리즘을 통해 상태의 변경을 파악한다.)</strong></p>\n<ol>\n<li>Virtual Dom이 리렌더링 된다.</li>\n<li>이전 Virtual Dom과 현재의 Virtual Dom을 비교를 한다.</li>\n<li>Diffing 알고리즘(Fibar)을 이용하여 DOM 트리를 순회하며, 변화한 곳을 체크하는데 체크가 될 경우 아래 자식요소는 <code class=\"language-text\">휴리스틱 알고리즘</code>에 의해 판단을 하지않고 전부 변화되었다고 간주한다.</li>\n<li>변화된 곳이 모두 파악되면, 리액트는 효율적인 업데이트 방법인 <code class=\"language-text\">Batch Update</code>를 수행하여 변화된 데이터를 실제 DOM에 <code class=\"language-text\">한번에 적용</code>시킨다.</li>\n</ol>\n<br/>\n<h3 id=\"효과적인-code-classlanguage-text재조정code이-이루어지기-위해서는\" style=\"position:relative;\"><a href=\"#%ED%9A%A8%EA%B3%BC%EC%A0%81%EC%9D%B8-code-classlanguage-text%EC%9E%AC%EC%A1%B0%EC%A0%95code%EC%9D%B4-%EC%9D%B4%EB%A3%A8%EC%96%B4%EC%A7%80%EA%B8%B0-%EC%9C%84%ED%95%B4%EC%84%9C%EB%8A%94\" aria-label=\"효과적인 code classlanguage text재조정code이 이루어지기 위해서는 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>효과적인 <code class=\"language-text\">재조정</code>이 이루어지기 위해서는?</h3>\n<ul>\n<li><strong>부모 노드의 타입이 <code class=\"language-text\">다르면</code> 자식 노드는 <code class=\"language-text\">비교하지 않는게 설정</code>하거나 노드에 <code class=\"language-text\">key를 부여</code>하면 일일이 탐색하지 않고도 접근할 수 있다.</strong></li>\n</ul>\n<br/>\n<h2 id=\"더-알면-좋을-것\" style=\"position:relative;\"><a href=\"#%EB%8D%94-%EC%95%8C%EB%A9%B4-%EC%A2%8B%EC%9D%84-%EA%B2%83\" aria-label=\"더 알면 좋을 것 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>더 알면 좋을 것</h2>\n<ul>\n<li>우리가 자주 보는 instagram, facebook 같은 사이트의 <code class=\"language-text\">새로고침이 없이 변경</code>되는 모습, 마치 앱처럼 보이는 <code class=\"language-text\">동적인 웹 페이지</code> <code class=\"language-text\">SPA(Single Page Application)</code>, <code class=\"language-text\">CSR(Client Side Rendering)</code>을 사용한 페이지라고 할 수 있음</li>\n<li><code class=\"language-text\">정적인 페이지란</code>? 웹 서버에 이미 저장되어 있는 HTML 문서를 클라이언트에게 전달하여 받은 페이지</li>\n<li><code class=\"language-text\">동적인 페이지란</code>? 유저의 행동과 흐름에 따라 웹페이지의 구성을 달리해주어야 하는 페이지</li>\n<li><code class=\"language-text\">정적인 페이지</code>를 만드는 것이 목적이라면 <code class=\"language-text\">프레임워크의 도움은 필요하지 않을</code>텐데, <code class=\"language-text\">요즘 트렌드</code>는 웹이 정적이고 단순한 페이지에서 벗어나 <code class=\"language-text\">복잡하고 동적으로 이루어져 있음</code></li>\n</ul>\n<br/>\n<h3 id=\"dom-이란\" style=\"position:relative;\"><a href=\"#dom-%EC%9D%B4%EB%9E%80\" aria-label=\"dom 이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DOM 이란?</h3>\n<p><img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/5/5a/DOM-model.svg/1200px-DOM-model.svg.png\" alt=\"DOM 이미지\"></p>\n<ul>\n<li>웹 페이지에 들어가있는 모든 엘리먼트를 트리형태로 작성한 것을 말함</li>\n</ul>\n<br/>\n<h3 id=\"virtual-dom이하-가상-dom이란\" style=\"position:relative;\"><a href=\"#virtual-dom%EC%9D%B4%ED%95%98-%EA%B0%80%EC%83%81-dom%EC%9D%B4%EB%9E%80\" aria-label=\"virtual dom이하 가상 dom이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Virtual Dom(이하 가상 DOM)이란?</h3>\n<p><img src=\"https://elmprogramming.com/images/chapter-5/5.3-virtual-dom/elm-runtime-virtual-dom.svg\" alt=\"Virtual Dom 설멍 이미지\"></p>\n<ul>\n<li>실제 DOM에 접근하여 조작하는 대신에 HTML DOM을 추상화시켜, 자바스크립트 객체로 표현된 복사본</li>\n<li><code class=\"language-text\">수정사항이 여러 가지 있더라도</code>, <code class=\"language-text\">한 번만 렌더링을 일으킴</code></li>\n<li>객체를 <code class=\"language-text\">작은 단위로 쪼개어 작업</code>한다면, <code class=\"language-text\">렌더링 시</code> 발생하는 계산의 <code class=\"language-text\">연산비용을 줄일 수 있음</code></li>\n<li>하지만 <code class=\"language-text\">무조건 Virtual Dom이 빠른 것은 아니다.</code> <code class=\"language-text\">정보 제공만 하는 웹페이지라면</code> 인터랙션이 발생하지 않기 때문에 <code class=\"language-text\">일반 DOM의 성능이 더 좋을 수도 있음</code></li>\n</ul>\n<br/>\n<h2 id=\"용어사전\" style=\"position:relative;\"><a href=\"#%EC%9A%A9%EC%96%B4%EC%82%AC%EC%A0%84\" aria-label=\"용어사전 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>용어사전</h2>\n<p><a href=\"https://m.blog.naver.com/PostView.naver?isHttpsRedirect=true&#x26;blogId=kosoodream&#x26;logNo=220822811776\">Interaction(인터렉션)</a>: 둘 이상의 물체나 대상이 서로 영향을 주고 받는 일종의 행동, 즉 인터렉션은 단방향 서비스가 아니라 서로 교류가 있는 양방향 통신이나 서비스를 의미</p>\n<p>Batch Update: <code class=\"language-text\">변경된 모든 엘리먼트들</code>을 <code class=\"language-text\">집단으로 한번에 적용</code> 시키는 것을 말한다.</p>\n<p>Diffing 알고리즘: <code class=\"language-text\">변경된 내용이 화면에 새롭게 그려지기 이전</code>(실제 DOM이 변경되기 이전)에 리액트는 두 개의 가상돔을 <code class=\"language-text\">비교해서 정확히 어떤 부분이 바뀌었는지</code> 효율적으로 비교하여 <code class=\"language-text\">파악</code>하는 알고리즘</p>\n<br/>\n<h2 id=\"참고링크\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0%EB%A7%81%ED%81%AC\" aria-label=\"참고링크 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고링크</h2>\n<p><a href=\"https://ko.reactjs.org/docs/reconciliation.html\">리엑트 재조정</a></p>\n<p><a href=\"https://ui.toast.com/weekly-pick/ko_20210819\">Incremental DOM과 Virtual DOM 비교</a></p>\n<p><a href=\"https://velog.io/@jeromecheon/React%EB%9E%80-%ED%8A%B9%EC%A7%95%EA%B3%BC-%EC%9E%A5%EB%8B%A8%EC%A0%90-%ED%8C%8C%ED%97%A4%EC%B9%98%EA%B8%B0\">React란? 특징과 장단점 파헤치기</a></p>\n<p><a href=\"https://gurtn.tistory.com/96\">[React] 리액트를 사용하는 이유</a></p>\n<p><a href=\"https://velog.io/@dbfudgudals/%EB%A6%AC%EC%95%A1%ED%8A%B8%EC%9D%98-%EC%9E%A5%EC%A0%90%EA%B3%BC-%EB%8B%A8%EC%A0%90\">리액트의 장점과 단점</a></p>\n<p><a href=\"https://www.howdy-mj.me/dom/what-is-dom\">DOM과 Virtual Dom이란?</a></p>\n<p><a href=\"https://www.youtube.com/watch?v=gc-kXt0tjTM&#x26;list=PLZ5oZ2KmQEYjVH2ie-sZJnbEE6B-uCVIh&#x26;index=4&#x26;t=7s\">별코딩 - 버츄얼돔</a></p>\n<br/>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#react%EA%B0%80-%EB%93%B1%EC%9E%A5%ED%95%98%EA%B2%8C-%EB%90%9C-%EC%9D%B4%EC%9C%A0%EB%8A%94\">React가 등장하게 된 이유는</a></p>\n</li>\n<li>\n<p><a href=\"#react%EC%9D%98-%ED%8A%B9%EC%A7%95%EC%9D%80\">React의 특징은</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%9E%A5%EB%8B%A8%EC%A0%90\">장단점</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%9E%91%EB%8F%99%EC%9B%90%EB%A6%AC-%EC%9E%AC%EC%A1%B0%EC%A0%95reconciliation-%EC%9D%BC%EC%96%B4%EB%82%98%EB%8A%94-%EC%9B%90%EB%A6%AC\">작동원리, 재조정(Reconciliation) 일어나는 원리</a></p>\n<ul>\n<li><a href=\"#%ED%9A%A8%EA%B3%BC%EC%A0%81%EC%9D%B8-%EC%9E%AC%EC%A1%B0%EC%A0%95%EC%9D%B4-%EC%9D%B4%EB%A3%A8%EC%96%B4%EC%A7%80%EA%B8%B0-%EC%9C%84%ED%95%B4%EC%84%9C%EB%8A%94\">효과적인 <code class=\"language-text\">재조정</code>이 이루어지기 위해서는?</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EB%8D%94-%EC%95%8C%EB%A9%B4-%EC%A2%8B%EC%9D%84-%EA%B2%83\">더 알면 좋을 것</a></p>\n<ul>\n<li><a href=\"#dom-%EC%9D%B4%EB%9E%80\">DOM 이란?</a></li>\n<li><a href=\"#virtual-dom%EC%9D%B4%ED%95%98-%EA%B0%80%EC%83%81-dom%EC%9D%B4%EB%9E%80\">Virtual Dom(이하 가상 DOM)이란?</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%9A%A9%EC%96%B4%EC%82%AC%EC%A0%84\">용어사전</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%B0%B8%EA%B3%A0%EB%A7%81%ED%81%AC\">참고링크</a></p>\n</li>\n</ul>\n</div>","frontmatter":{"date":"December 23, 2022","title":"React란? 그리고 사용하는 이유와 단점","categories":"React","author":"JungSany","emoji":"🚨"},"fields":{"slug":"/react/react-use-reasons/"}},"site":{"siteMetadata":{"siteUrl":"https://rnfltpgus.github.io","comments":{"utterances":{"repo":"rnfltpgus/rnfltpgus.github.io"}}}}},"pageContext":{"slug":"/knowledge/semantic-markup/","nextSlug":"/knowledge/pwa/","prevSlug":"/react/react-use-reasons/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}