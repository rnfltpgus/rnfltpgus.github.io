{"componentChunkName":"component---src-templates-blog-template-js","path":"/knowledge/webrtc/","result":{"data":{"cur":{"id":"38ed35d7-a244-5467-9bce-f10c11250581","html":"<h2 id=\"webrtcweb-real-time-communications란\" style=\"position:relative;\"><a href=\"#webrtcweb-real-time-communications%EB%9E%80\" aria-label=\"webrtcweb real time communications란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>WebRTC(Web Real-Time Communications)란?</h2>\n<ul>\n<li><strong>WebRTC</strong>는 서버를 최대한 거치지 않고 P2P로 브라우저나 단말 간에 데이터를 주고받는 기술의 웹 표준이다.</li>\n<li>웹에서 실시간 미디어 스트림을 송수신할 수 있는 유일한 표준이고 또 유일한 P2P 표준이기도 하다.</li>\n<li><strong>쉽게 말하자면</strong> 웹 어플리케이션(최근에는 Android 및 IOS도 지원) 및 사이트들이 별도의 소프트웨어 없이 음성, 영상 미디어 혹은 텍스트, 파일 같은 데이터를 브라우져끼리 주고 받을 수 있게 만든 기술이다.</li>\n</ul>\n<p><img src=\"https://cdn.ttgtmedia.com/rms/onlineimages/how_webrtc_works-f.png\" alt=\"WebRTC 통신 원리\"></p>\n<br/>\n<h2 id=\"위의-그림을-통한-설명\" style=\"position:relative;\"><a href=\"#%EC%9C%84%EC%9D%98-%EA%B7%B8%EB%A6%BC%EC%9D%84-%ED%86%B5%ED%95%9C-%EC%84%A4%EB%AA%85\" aria-label=\"위의 그림을 통한 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>위의 그림을 통한 설명</h2>\n<p>보통 두 기기가 실시간으로 소통하기 위해서는 WebRTC에서 제공하는 <code class=\"language-text\">MediaStream, RTPeerConnection, RTCDataChannel</code> 등의 API와 API들을 적절하게 데이터를 교환할 수 있도록 처리해 주는 과정인 <code class=\"language-text\">Signaling</code>이라는 프로세스를 통해 통신을 조정해야하며, 네트워크 주소 변환기(NAT) 및 방화벽에 대처하기 위해 메타데이터를 교환할 수 있는 <code class=\"language-text\">Signaling 서버</code> 역시 필요하다. 또 P2P 연결이 불가능한 상황을 대비한 릴레이 서버(TURN)가 필요하다.</p>\n<ul>\n<li><strong>WebRTC</strong>를 사용해 연결을 맺고, peer의 기기에서 미디어를 가져와 교환한다.</li>\n<li><strong>Signaling</strong>을 통해 통신할 peer간 정보를 교환할 수 있다.(네트워크 정보, capability 정보, 세션 수립 등)\n<ul>\n<li><strong>Signaling의 구성하는 방법</strong>은 <code class=\"language-text\">XHR와 Channel API</code>를 이용하거나 node 서버에서 <code class=\"language-text\">Socket.io</code>를 이용하는 방법 등이 있다.</li>\n<li>Session control messages: 통신의 초기화, 종료, 그리고 에러 리포트</li>\n<li>Network configuration : ICE 프레임워크를 사용해서 서로의 IP 와 포트를 찾는 과정</li>\n<li>Media capabilites : 내 브라우저와 상대 브라우저가 사용 가능한 코덱, 해상도 등’</li>\n</ul>\n</li>\n</ul>\n<br/>\n<h2 id=\"webrtc-활용-분야\" style=\"position:relative;\"><a href=\"#webrtc-%ED%99%9C%EC%9A%A9-%EB%B6%84%EC%95%BC\" aria-label=\"webrtc 활용 분야 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>WebRTC 활용 분야</h2>\n<p>기본적으로 P2P 스트리밍 기술에서 출발하였지만, 최근에는 다양한 언택트 서비스들로 발전하였다.\n<img src=\"https://blog.kakaocdn.net/dn/cRzhzu/btriFtRzxui/g8YtExcv3hTHyH2xIIKL6k/img.png\" alt=\"WebRTC로 가능한 언택트 서비스들\"></p>\n<br/>\n<h3 id=\"용어사전\" style=\"position:relative;\"><a href=\"#%EC%9A%A9%EC%96%B4%EC%82%AC%EC%A0%84\" aria-label=\"용어사전 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>용어사전</h3>\n<ul>\n<li>P2P(동등 계층간 통신망): peer-to-peer network의 줄임말로 소수의 서버에 집중하기보다는 망구성에 참여하는 기계들의 계산과 대역폭 성능에 의존하여 구성되는 통신망</li>\n<li>MediaStream: 카메라와 마이크 등의 데이터 스트림 접근</li>\n<li>RTCPeerConnection: 암호화 및 대역폭 관리 및 오디오, 비디오의 연결</li>\n<li>RTCDataChannel: 일반적인 데이터의 P2P 통신</li>\n<li>Signaling:통신을 조율할 메시지를 주고 받는 일련의 프로세스 or RTCPeerConnection들이 적절하게 데이터를 교환할 수 있게 처리해 주는 프로세스</li>\n<li>Caller: 요청을 받거나 주는 대상? (기기의 앱, 브라우저 간에, 단말기기 간)</li>\n<li><a href=\"https://webrtc.org/getting-started/turn-server\">TURN 서버</a>: NAT 주위의 릴레이를 사용한 순회를 의미하며, 네트워크 트래픽을 중계하는 프로토콜</li>\n</ul>\n<br/>\n<h3 id=\"참고링크\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0%EB%A7%81%ED%81%AC\" aria-label=\"참고링크 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고링크</h3>\n<p><a href=\"https://webrtc.org/\">WebRTC 공홈</a></p>\n<p><a href=\"https://developer.mozilla.org/ko/docs/Web/API/WebRTC_API/Protocols\">WebRTC mdn</a></p>\n<p><a href=\"https://tech.kakaoenterprise.com/121\">WebRTC 응용 서비스를 개발하는 2가지 방법</a></p>\n<p><a href=\"https://medium.com/@hyun.sang/webrtc-webrtc%EB%9E%80-43df68cbe511\">WebRTC란?</a></p>\n<p><a href=\"https://web.dev/webrtc-infrastructure/\">Build the backend services needed for a WebRTC app</a></p>\n<p><a href=\"https://juneyr.dev/webrtc-basics\">실시간 통화 어떻게 하는 거지 : WebRTC 기초</a></p>\n<p><a href=\"https://www.techtarget.com/searchunifiedcommunications/definition/WebRTC-Web-Real-Time-Communications\">WebRTC (Web Real-Time Communications)</a></p>\n<p><a href=\"https://ko.wikipedia.org/wiki/P2P\">p2p</a></p>\n<p><a href=\"https://gh402.tistory.com/45\">NAT, ICE, STUN, TURN 이란?</a></p>\n<br/>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#webrtcweb-real-time-communications%EB%9E%80\">WebRTC(Web Real-Time Communications)란?</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%9C%84%EC%9D%98-%EA%B7%B8%EB%A6%BC%EC%9D%84-%ED%86%B5%ED%95%9C-%EC%84%A4%EB%AA%85\">위의 그림을 통한 설명</a></p>\n</li>\n<li>\n<p><a href=\"#webrtc-%ED%99%9C%EC%9A%A9-%EB%B6%84%EC%95%BC\">WebRTC 활용 분야</a></p>\n<ul>\n<li><a href=\"#%EC%9A%A9%EC%96%B4%EC%82%AC%EC%A0%84\">용어사전</a></li>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0%EB%A7%81%ED%81%AC\">참고링크</a></li>\n</ul>\n</li>\n</ul>\n</div>","excerpt":"WebRTC(Web Real-Time Communications)란? WebRTC는 서버를 최대한 거치지 않고 P2P로 브라우저나 단말 간에 데이터를 주고받는 기술의 웹 표준이다. 웹에서 실시간 미디어 스트림을 송수신할 수 있는 유일한 표준이고 또 유일한 P2P 표준이기도 하다. 쉽게 말하자면 웹 어플리케이션(최근에는 Android 및 IOS도 지원) 및 사이트들이 별도의 소프트웨어 없이 음성, 영상 미디어 혹은 텍스트, 파일 같은 데이터를 브라우져끼리 주고 받을 수 있게 만든 기술이다. WebRTC 통신 원리 위의 그림을 통한 설명 보통 두 기기가 실시간으로 소통하기 위해서는 WebRTC에서 제공하는  등의 API와 API들을 적절하게 데이터를 교환할 수 있도록 처리해 주는 과정인 이라는 프로세스를 통해 통신을 조정해야하며, 네트워크 주소 변환기(NAT) 및 방화벽에 대처하기 위해 메타데이터를 교환할 수 있는  역시 필요하다. 또 P2P 연결이 불가능한 상황을 대비한 릴레이 서버…","frontmatter":{"date":"December 19, 2022","title":"WebRTC에 대해서","categories":"개발지식","author":"JungSany","emoji":"🗞️"},"fields":{"slug":"/knowledge/webrtc/"}},"next":{"id":"a1c274b3-2f0c-58fe-adbc-fdb4b4b2d729","html":"<ul>\n<li><strong>Props VS State</strong>\n<ul>\n<li><code class=\"language-text\">두 객체 모두 렌더링 결과물</code>에 영향을 주는 정보를 가지고 있다.</li>\n<li><strong><code class=\"language-text\">Props</code>는 (함수 매개변수처럼) 컴포넌트에 전달되는 반면</strong></li>\n<li><strong><code class=\"language-text\">State</code>는 (함수 내에 선언된 변수처럼)컴포넌트 안에서 관리한다.</strong></li>\n</ul>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>props</th>\n<th>state</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>상위 구성 요소에서 초기 값을 가져올 수 있습니까?</td>\n<td>예</td>\n<td>예</td>\n</tr>\n<tr>\n<td>상위 컴포넌트로 변경할 수 있습니까?</td>\n<td>예</td>\n<td>아니</td>\n</tr>\n<tr>\n<td>Component 내에서 기본값을 설정할 수 있습니까?</td>\n<td>예</td>\n<td>예</td>\n</tr>\n<tr>\n<td>Component 내부에서 변경할 수 있습니까?</td>\n<td>아니</td>\n<td>예</td>\n</tr>\n<tr>\n<td>자식 컴포넌트의 초기값을 설정할 수 있습니까?</td>\n<td>예</td>\n<td>예</td>\n</tr>\n<tr>\n<td>자식 구성 요소에서 변경할 수 있습니까?</td>\n<td>예</td>\n<td>아니</td>\n</tr>\n</tbody>\n</table>\n<br/>","frontmatter":{"date":"December 19, 2022","title":"Props VS State","categories":"React","author":"JungSany","emoji":"🥊"},"fields":{"slug":"/react/props-state/"}},"prev":{"id":"2a47cfa7-d53a-581d-a53f-b1b1d7dbd675","html":"<h3 id=\"개요\" style=\"position:relative;\"><a href=\"#%EA%B0%9C%EC%9A%94\" aria-label=\"개요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개요</h3>\n<p>자바스크립트에는 여덟 가지 자료형이 있다.</p>\n<p>이 중 일곱 개는 오직 하나의 데이터(문자열, 숫자 등)만 담을 수 있어 ‘원시형(primitive type)’라고 부른다.</p>\n<p>그런데 객체형은</p>\n<ol>\n<li>원시형과 달리 다양한 데이터를 담을 수 있다.</li>\n<li>키로 구분된 데이터 집합이나 복잡한 개체(entity)를 저장할 수 있다.</li>\n</ol>\n<p><code class=\"language-text\">즉 객체는 자바스크립트의 거의 모든 면에 녹아있는 개념이므로 자바스크립트를 잘 다루려면 객체를 잘 이해하고 있어야 한다.</code></p>\n<p>객체를 만들기 위해서는 중괄호 {}를 이용해 만들 수 있는데, 중괄호 안에는 ‘키(key): 값(value)’ 쌍으로 구성된 프로퍼티(property)를 여러 개 넣을 수 있는데, 아래와 같이 허용할 수 있으며, 프로퍼티 키는 ‘프로퍼티 이름’ 이라고도 부른다.</p>\n<p>그리고 프로퍼티 값엔 모든 자료형이 올 수 있다.</p>\n<ul>\n<li>키에는 문자형</li>\n<li>값에는 자료형</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">let</span> user <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 객체 user라는 obj를 생성하는데, 안에 프로퍼티로 name과 age를 생성한 샘이다.</span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'JungSeaHyun'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 키: \"name\",  값: \"JungSeHyun\"</span>\n  <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">33</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 키: \"age\", 값: 33</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br/>\n<h3 id=\"요약\" style=\"position:relative;\"><a href=\"#%EC%9A%94%EC%95%BD\" aria-label=\"요약 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>요약</h3>\n<ol>\n<li>객체는 몇 가지 특수한 기능을 가진 연관 배열(associative array)이다.</li>\n<li>객체는 프로퍼티(키-값 쌍)를 저장한다.</li>\n</ol>\n<ul>\n<li>프로퍼티 키는 문자열이나 심볼이여야 한다. (보통은 문자열)</li>\n<li>값은 어떤 자료형도 가능하다.</li>\n</ul>\n<ol>\n<li>프로퍼티 접근 방식은 점, 대괄호 표기법이 있다.</li>\n<li>자바스크립트는 일반 객체 이외에도 다양한 종류의 객체가 있다. (추가로, ‘Array타입’이나 ‘Date 타입’은 독립적인 자료형이 아니라 ‘<strong>객체</strong>‘형에 속한다.)</li>\n</ol>\n<ul>\n<li>Array : 정렬된 데이터 컬렉션을 저장할 때 쓰임</li>\n<li>Date : 날짜와 시간 정보를 저장할 때 쓰임</li>\n<li>Error : 에러 정보를 저장할 때 쓰임</li>\n<li>기타 등등</li>\n</ul>\n<br/>\n<h3 id=\"참고링크\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0%EB%A7%81%ED%81%AC\" aria-label=\"참고링크 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고링크</h3>\n<p><a href=\"https://ko.javascript.info/object\">객체</a></p>\n<br/>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%EA%B0%9C%EC%9A%94\">개요</a></li>\n<li><a href=\"#%EC%9A%94%EC%95%BD\">요약</a></li>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0%EB%A7%81%ED%81%AC\">참고링크</a></li>\n</ul>\n</div>","frontmatter":{"date":"December 20, 2022","title":"객체(Object)란?","categories":"JavaScript","author":"JungSany","emoji":"🍇"},"fields":{"slug":"/javascript/object/"}},"site":{"siteMetadata":{"siteUrl":"https://rnfltpgus.github.io","comments":{"utterances":{"repo":"rnfltpgus/rnfltpgus.github.io"}}}}},"pageContext":{"slug":"/knowledge/webrtc/","nextSlug":"/react/props-state/","prevSlug":"/javascript/object/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}