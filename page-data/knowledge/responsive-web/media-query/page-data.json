{"componentChunkName":"component---src-templates-blog-template-js","path":"/knowledge/responsive-web/media-query/","result":{"data":{"cur":{"id":"359aad08-711e-5433-a93d-ae4d070b02eb","html":"<h1 id=\"media-query-란\" style=\"position:relative;\"><a href=\"#media-query-%EB%9E%80\" aria-label=\"media query 란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Media Query 란?</h1>\n<ul>\n<li>구체적인 조건을 필요한 스타일 적용할 수 있도록 확장하였다.</li>\n<li>간단한 이야기로 말하면 각 화면의 비율마다 각각 다른 화면을 보여주자 라는 개념을 가고 있다.</li>\n<li>다양한 기기들이 많아 웹 페이지를 접속할 때, 각기 다른 페이지를 보여줘야 되는데, 반응형을 사용하지 않는다면 각 페이지마다 새로운 파일을 만들어서 각기 다른 버전으로 관리해야 한다.</li>\n<li>이 때 그런 번거로움을 없애기 위하여 한 파일에서 pc, 모바일, 태블릿 등을 고려한 웹 사이트를 만들 수 있게 반응형 웹 페이지를 만드는 것이다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token comment\">/* 이런식으로 미디어 쿼리를 작성하여, 브라우저 창의 width가 600px 이하인 경우, body의 배경색을 lightblue로 적용하겠다는 의미의 코드를 작성할 수 있다. */</span>\n\n<span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token keyword\">only</span> screen <span class=\"token keyword\">and</span> <span class=\"token punctuation\">(</span><span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span> 600px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token selector\">body</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> lightblue<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br/>\n<h2 id=\"fluid-grid\" style=\"position:relative;\"><a href=\"#fluid-grid\" aria-label=\"fluid grid permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Fluid Grid</h2>\n<p><img src=\"https://velog.velcdn.com/images%2Fpyo-sh%2Fpost%2F011a8a93-d1ee-4021-a95a-6e5d19021aff%2Fjsseo-140329-CSS-05-1024x213.png\" alt=\"Fluid Grid 이미지\"></p>\n<ul>\n<li>그리드의 폭을 고정 값이 아닌 em 또는 %의 값으로 설정하는 것을 뜻함</li>\n<li>가로 폭의 길이의 변화에 따라 컬럼의 크기가 상대적으로 변하게 하는 방법</li>\n<li>레이아웃에는 변화가 없을 수 있으므로 폭이 많이 좁은 모바일에서 큰 효과를 볼 수 없을 수 있음</li>\n</ul>\n<br/>\n<h2 id=\"liquid-layouts\" style=\"position:relative;\"><a href=\"#liquid-layouts\" aria-label=\"liquid layouts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Liquid Layouts</h2>\n<p><img src=\"https://velog.velcdn.com/images%2Fpyo-sh%2Fpost%2Fb46705f8-6d95-446c-8525-d8fbced9c7ff%2Fjsseo-140329-CSS-06-1024x495.png\" alt=\"Liquid Layouts 이미지\"></p>\n<ul>\n<li>유동형 그리드와 같이 반응형 웹 기법 중 하나</li>\n<li>레이아웃 크기를 유동형 그리드와 같이 상대적 단위로 지정하여 웹의 크기에 따라 유동적으로 변화를 줌</li>\n<li>반응형 그리드와 같이 미디어 쿼리를 사용하여 일정 크기가 되면 레이아웃 구조를 바꾸어 줌</li>\n</ul>\n<br/>\n<h2 id=\"in-react\" style=\"position:relative;\"><a href=\"#in-react\" aria-label=\"in react permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>in React</h2>\n<ul>\n<li>React에서는 <code class=\"language-text\">react-responsive</code>의 훅을 이용해 구현하는 방법이 있다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// react-responsive 모듈 설치</span>\nnpm install react<span class=\"token operator\">-</span>responsive\n\n<span class=\"token comment\">// typescript 를 사용하는 경우 추가 설치</span>\nnpm install @types<span class=\"token operator\">/</span>react<span class=\"token operator\">-</span>responsive</code></pre></div>\n<ul>\n<li>useMediaQuery 훅 사용방법</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useMediaQuery <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-responsive'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Example</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> isDesktopOrLaptop <span class=\"token operator\">=</span> <span class=\"token function\">useMediaQuery</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">minDeviceWidth</span><span class=\"token operator\">:</span> <span class=\"token number\">1224</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> isBigScreen <span class=\"token operator\">=</span> <span class=\"token function\">useMediaQuery</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">minDeviceWidth</span><span class=\"token operator\">:</span> <span class=\"token number\">1824</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> isTabletOrMobile <span class=\"token operator\">=</span> <span class=\"token function\">useMediaQuery</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">maxWidth</span><span class=\"token operator\">:</span> <span class=\"token number\">1224</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> isTabletOrMobileDevice <span class=\"token operator\">=</span> <span class=\"token function\">useMediaQuery</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">maxDeviceWidth</span><span class=\"token operator\">:</span> <span class=\"token number\">1224</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> isPortrait <span class=\"token operator\">=</span> <span class=\"token function\">useMediaQuery</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">orientation</span><span class=\"token operator\">:</span> <span class=\"token string\">'portrait'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> isRetina <span class=\"token operator\">=</span> <span class=\"token function\">useMediaQuery</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">minResolution</span><span class=\"token operator\">:</span> <span class=\"token string\">'2dppx'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">...</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>해당 변수는 조건에 맞는지 아닌지에 대한 true / false 가 들어가게 된다.</li>\n<li>특정 상황에서만 출력을 하도록 하고 싶다면 아래와 같은 예제를 만들 수 있다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useMediaQuery <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-responsive'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Example</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> isDesktopOrLaptop <span class=\"token operator\">=</span> <span class=\"token function\">useMediaQuery</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">minDeviceWidth</span><span class=\"token operator\">:</span> <span class=\"token number\">1224</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">deviceWidth</span><span class=\"token operator\">:</span> <span class=\"token number\">1600</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// `device` prop</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span>isDesktopOrLaptop <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          this will always get rendered even if device is shorter than 1224px, that's because we\n          overrode device settings with 'deviceWidth: 1600'.\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br/>\n<h2 id=\"참고용-css\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0%EC%9A%A9-css\" aria-label=\"참고용 css permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고용 CSS</h2>\n<h3 id=\"display-속성\" style=\"position:relative;\"><a href=\"#display-%EC%86%8D%EC%84%B1\" aria-label=\"display 속성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>display 속성</h3>\n<ol>\n<li>inline(default)height, width 속성을 지정할 수 없다.(=Inline element) 한 줄에 이어서 쓴다.ex) span, a</li>\n<li>block자동으로 줄바꿈을 하여 하나의 행을 차지하고, width 등의 속성을 지정할 수 있다.ex) div, p, h1</li>\n<li>inline-block기본적으로 inline 속성을 가지나 width 등의 속성을 지정할 수 있다,ex) input, button, select</li>\n<li>flex레이아웃 배치 툴이다. 내용이 방대하므로 <a href=\"https://studiomeal.com/archives/197\">이 사이트</a>를 참조하자.justify는 가로 정렬, align은 세로 정렬이라는 것을 명심하자. flex-direction을 이용하여 반응형 웹을 구현할 것이다.</li>\n<li>grid마찬가지로 레이아웃 배치 툴이며, <a href=\"https://studiomeal.com/archives/533\">이 사이트</a>에 잘 정리되어 있다.</li>\n</ol>\n<br/>\n<h3 id=\"position-속성\" style=\"position:relative;\"><a href=\"#position-%EC%86%8D%EC%84%B1\" aria-label=\"position 속성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>position 속성</h3>\n<ol>\n<li>static(default)요소를 일반적인 흐름에 맞게 배치하고, top/left/z-index 등의 속성을 사용할 수 없다. 일반적인 흐름이란 요소들의 기본적인 display 속성을 고려하여 배치한다는 뜻이다.</li>\n<li>relative요소를 일반적인 흐름에 맞게 배치하고, <strong>배치된 위치를 기준으로 상대적으로</strong> top, left 등의 속성을 적용할 수 있다.</li>\n<li>absolute일반적인 흐름이 아닌 <strong>가장 가까운 부모 컴포넌트를 기준으로</strong> 배치하며 top, left 등의 속성을 적용할 수 있다.</li>\n<li>fixed일반적인 흐름이 아닌 <strong>Viewport를 기준으로</strong> 배치하며, 이는 곧 사용자가 보는 화면 상에고정되어 있음을 의미한다.</li>\n</ol>\n<br/>\n<h2 id=\"참고링크\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0%EB%A7%81%ED%81%AC\" aria-label=\"참고링크 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고링크</h2>\n<p><a href=\"https://log.designichthus.com/11\">[CSS] 미디어쿼리(Media Query)의 기본사용법</a></p>\n<p><a href=\"https://hong-jh.tistory.com/entry/%EB%B0%98%EC%9D%91%ED%98%95-%EC%9B%B9%ED%8E%98%EC%9D%B4%EC%A7%80%EB%9E%80-with-%EA%B0%84%EB%8B%A8%ED%95%9C-%EB%B0%98%EC%9D%91%ED%98%95-%EC%95%A0%ED%94%8C%EC%82%AC%EC%9D%B4%ED%8A%B8-navBar%EB%A7%8C%EB%93%A4%EA%B8%B0\">반응형 웹페이지란? (with 간단한 반응형 애플사이트 navBar만들기!)</a></p>\n<p><a href=\"https://velog.io/@pyo-sh/React-Responsive\">[React] React-Responsive / 반응형 웹 만들기</a></p>\n<p><a href=\"https://eblee-repo.tistory.com/49\">에브리 저장소</a></p>\n<p><a href=\"https://www.npmjs.com/package/react-responsive\">react-responsive</a></p>\n<br/>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#fluid-grid\">Fluid Grid</a></p>\n</li>\n<li>\n<p><a href=\"#liquid-layouts\">Liquid Layouts</a></p>\n</li>\n<li>\n<p><a href=\"#in-react\">in React</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%B0%B8%EA%B3%A0%EC%9A%A9-css\">참고용 CSS</a></p>\n<ul>\n<li><a href=\"#display-%EC%86%8D%EC%84%B1\">display 속성</a></li>\n<li><a href=\"#position-%EC%86%8D%EC%84%B1\">position 속성</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%B0%B8%EA%B3%A0%EB%A7%81%ED%81%AC\">참고링크</a></p>\n</li>\n</ul>\n</div>","excerpt":"Media Query 란? 구체적인 조건을 필요한 스타일 적용할 수 있도록 확장하였다. 간단한 이야기로 말하면 각 화면의 비율마다 각각 다른 화면을 보여주자 라는 개념을 가고 있다. 다양한 기기들이 많아 웹 페이지를 접속할 때, 각기 다른 페이지를 보여줘야 되는데, 반응형을 사용하지 않는다면 각 페이지마다 새로운 파일을 만들어서 각기 다른 버전으로 관리해야 한다. 이 때 그런 번거로움을 없애기 위하여 한 파일에서 pc, 모바일, 태블릿 등을 고려한 웹 사이트를 만들 수 있게 반응형 웹 페이지를 만드는 것이다. Fluid Grid Fluid Grid 이미지 그리드의 폭을 고정 값이 아닌 em 또는 %의 값으로 설정하는 것을 뜻함 가로 폭의 길이의 변화에 따라 컬럼의 크기가 상대적으로 변하게 하는 방법 레이아웃에는 변화가 없을 수 있으므로 폭이 많이 좁은 모바일에서 큰 효과를 볼 수 없을 수 있음 Liquid Layouts Liquid Layouts 이미지 유동형 그리드와 같이 반응형…","frontmatter":{"date":"December 30, 2022","title":"미디어 쿼리(Media Query)란?","categories":"개발지식 ResponsiveWep","author":"JungSany","emoji":"🌅"},"fields":{"slug":"/knowledge/responsive-web/media-query/"}},"next":{"id":"71f4cdc9-12ab-5eb8-acf4-3dec7e9caab8","html":"<h1 id=\"viewport란\" style=\"position:relative;\"><a href=\"#viewport%EB%9E%80\" aria-label=\"viewport란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Viewport란?</h1>\n<ul>\n<li><strong>현재 보고 있는 컴퓨터 그래픽의 영역을 나타내는 말로, 웹 브라우저 용어에서는 일반적으로 UI, 메뉴 표시줄 등을 제외하고는 브라우저 창과 동일하다. 보고 있는 문서의 일부이며, 웹 페이지에서 사용자가 볼 수 있는 영역이라고 할 수 있다.</strong></li>\n<li>태블릿이나 스마트폰이 있기 전에는 웹 페이지가 컴퓨터 화면만을 위해 설계가 되었었는데, 현재 다양한 기기들을 사용자들이 사용하고 있기 때문에 기존에 컴퓨터 화면에만 맞추어서 설계되었던 <code class=\"language-text\">UI/UX</code>가 <code class=\"language-text\">다양한 기기에 맞게</code> 설계를 <code class=\"language-text\">정적인 설계, 고정된 크기</code>에서 → <code class=\"language-text\">다양한 스크린 크기에 맞게 축소/확대</code>가 가능한 설계 방식으로 바뀌게 되었다.</li>\n</ul>\n<br/>\n<h2 id=\"viewport-설정\" style=\"position:relative;\"><a href=\"#viewport-%EC%84%A4%EC%A0%95\" aria-label=\"viewport 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Viewport 설정</h2>\n<ul>\n<li><meta> 뷰포트 요소를 모든 반응형 웹 페이지에 포함해야 한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>viewport<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>width=device-width, initial-scale=1.0<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">&lt;meta /></code> 뷰포트 요소는 페이지의 크기 및 배율을 제어하는 방법에 대한 지침을 브라우저에 제공한다.</li>\n<li><code class=\"language-text\">width=device-width</code>은 페이지의 너비를 설정하여 기기의 화면 너비를 따르도록 한다.(기기에 따라 다름)</li>\n<li><code class=\"language-text\">initial-scale=1.0</code>은 브라우저에 의해 페이지가 처음 로드될 때 초기 확대/축소 레벨을 설정한다.</li>\n</ul>\n<br/>\n<h2 id=\"콘텐츠-크기-조정\" style=\"position:relative;\"><a href=\"#%EC%BD%98%ED%85%90%EC%B8%A0-%ED%81%AC%EA%B8%B0-%EC%A1%B0%EC%A0%95\" aria-label=\"콘텐츠 크기 조정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>콘텐츠 크기 조정</h2>\n<ul>\n<li>사용자들은 보통 데스크톱과 모바일 기기에서 웹 사이트를 수평으로 스크롤하지 않는다.</li>\n<li>따라서 사용자가 전체 웹 페이지를 보기 위해 수평으로 스크롤하거나 축소해야 할 경우 사용자 경험(UX)이 좋지 않게 된다.</li>\n<li><strong>따라야 할 몇 가지 추가 규칙</strong>\n<ul>\n<li>이미지와 같은 미디어 콘텐츠가 뷰포트보다 넓은 폭으로 표시되는 경우, 이 콘텐츠를 뷰포트의 폭에 맞게 조정해야 한다.</li>\n<li>스크린 크기와 CSS 픽셀의 너비는 기기마다 매우 다르기 때문에 콘텐츠는 특정 뷰포트 폭에 의존해서는 안 된다.</li>\n<li>페이지 요소에 대해 큰 절대 CSS 폭을 설정하면 요소가 더 작은 장치의 뷰포트에 비해 너무 넓어진다. 대신 <code class=\"language-text\">width: 100%</code>와 같은 상대적 너비 값을 사용해야 하며, 또한 절대적인 위치 지정 값을 너무 크게 사용하지 않도록 주의해야 한다.</li>\n<li>이유는 화면이 작은 기기에서 UI 요소를 뷰포트 밖으로 밀어낼 수 있기 때문이다.</li>\n</ul>\n</li>\n</ul>\n<br/>\n<h2 id=\"참고링크\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0%EB%A7%81%ED%81%AC\" aria-label=\"참고링크 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고링크</h2>\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/Viewport_concepts\">MDN - Viewport concepts</a></p>\n<p><a href=\"https://eblee-repo.tistory.com/47\">에브리 저장소</a></p>\n<br/>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#viewport-%EC%84%A4%EC%A0%95\">Viewport 설정</a></li>\n<li><a href=\"#%EC%BD%98%ED%85%90%EC%B8%A0-%ED%81%AC%EA%B8%B0-%EC%A1%B0%EC%A0%95\">콘텐츠 크기 조정</a></li>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0%EB%A7%81%ED%81%AC\">참고링크</a></li>\n</ul>\n</div>","frontmatter":{"date":"December 29, 2022","title":"View port(뷰포트)란?","categories":"개발지식 ResponsiveWep","author":"JungSany","emoji":"🌁"},"fields":{"slug":"/knowledge/responsive-web/viewport/"}},"prev":{"id":"02ea1e24-73b5-5af6-af6d-bf6d213725e7","html":"<h1 id=\"fluid-grid-란\" style=\"position:relative;\"><a href=\"#fluid-grid-%EB%9E%80\" aria-label=\"fluid grid 란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Fluid Grid 란?</h1>\n<h2 id=\"우선-그리드-시스템-grid-system이란\" style=\"position:relative;\"><a href=\"#%EC%9A%B0%EC%84%A0-%EA%B7%B8%EB%A6%AC%EB%93%9C-%EC%8B%9C%EC%8A%A4%ED%85%9C-grid-system%EC%9D%B4%EB%9E%80\" aria-label=\"우선 그리드 시스템 grid system이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>우선 그리드 시스템 (grid system)이란?</h2>\n<p><strong>화면을 <code class=\"language-text\">몇 개의 칼럼(column)으로 나누어</code> 요소를 배치하도록 하는 시스템으로 <code class=\"language-text\">그리드 시스템은</code> 화면을 단순하게 만들면서 동시에 <code class=\"language-text\">배열을 규칙적</code>으로 할 수 있다는 장점이 있다.</strong></p>\n<br/>\n<h2 id=\"그리고-고정-그리드-레이아웃-fixed-grid-layout\" style=\"position:relative;\"><a href=\"#%EA%B7%B8%EB%A6%AC%EA%B3%A0-%EA%B3%A0%EC%A0%95-%EA%B7%B8%EB%A6%AC%EB%93%9C-%EB%A0%88%EC%9D%B4%EC%95%84%EC%9B%83-fixed-grid-layout\" aria-label=\"그리고 고정 그리드 레이아웃 fixed grid layout permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>그리고 고정 그리드 레이아웃 (fixed grid layout)</h2>\n<p><img src=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&#x26;fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FzmjS5%2FbtqS1U0NGcj%2FoCRGVY07pHBuoYKq3yshd0%2Fimg.png\" alt=\"고정 그리드 레이아웃 이미지\"></p>\n<p>말 그대로 <strong><code class=\"language-text\">그리드의 너비</code>를 <code class=\"language-text\">픽셀(px)</code>로 고정하는 것을 의미한다.</strong></p>\n<p>예를 들어 그리드의 너비를 360px로 입력하였다면 화면의 크기와 상관없이 해당 그리드는 너비 360px을 유지한다.</p>\n<p>위의 그림처럼 <code class=\"language-text\">고정 그리드 레이아웃을 이용하는 경우</code>, 다양한 기기를 사용하는 현대 사회에서 <code class=\"language-text\">사용자의 사용감</code>을 떨어틀일 수 있다.</p>\n<br/>\n<h2 id=\"그래서-가변-그리드-레이아웃-fluid-grid-layout이란\" style=\"position:relative;\"><a href=\"#%EA%B7%B8%EB%9E%98%EC%84%9C-%EA%B0%80%EB%B3%80-%EA%B7%B8%EB%A6%AC%EB%93%9C-%EB%A0%88%EC%9D%B4%EC%95%84%EC%9B%83-fluid-grid-layout%EC%9D%B4%EB%9E%80\" aria-label=\"그래서 가변 그리드 레이아웃 fluid grid layout이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>그래서 가변 그리드 레이아웃 (fluid grid layout)이란?</h2>\n<p><img src=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&#x26;fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FyXiEn%2FbtqSWajiPG2%2Fsl2zY4HFzvIy7YFE80Nzo0%2Fimg.png\" alt=\"가변 그리드 레이아웃 이미지\"></p>\n<p><strong><code class=\"language-text\">백분율(%)</code>을 이용하여 화면 너비에 대해 각 그리드의 너비 비율을 정하고, 화면의 크기 변화에 따라 그리드의 크기를 같이 변하게 할 수 있다.</strong></p>\n<p>때문에 고정 그리드 레이아웃에서 사용자의 사용감을 떨어트리는 요소를 가변 그리드 레이아웃을 사용한다면 해결할 수 있다.</p>\n<br/>\n<h2 id=\"그리드의-구성요소\" style=\"position:relative;\"><a href=\"#%EA%B7%B8%EB%A6%AC%EB%93%9C%EC%9D%98-%EA%B5%AC%EC%84%B1%EC%9A%94%EC%86%8C\" aria-label=\"그리드의 구성요소 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>그리드의 구성요소</h2>\n<h3 id=\"열columns\" style=\"position:relative;\"><a href=\"#%EC%97%B4columns\" aria-label=\"열columns permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>열(Columns)</h3>\n<p><img src=\"https://miro.medium.com/max/720/1*hw8EKWA-DNytrtbzgZ_dEw.webp\" alt=\"반응형 그리드의 열 이미지\"></p>\n<p><code class=\"language-text\">열</code>은 가상의 세로 블록이며 내용을 정렬하는 데 사용되며, <code class=\"language-text\">열 너비</code>는 백분율(%) 또는 고정 값으로 정의한다.</p>\n<br/>\n<h3 id=\"홈통gutters\" style=\"position:relative;\"><a href=\"#%ED%99%88%ED%86%B5gutters\" aria-label=\"홈통gutters permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>홈통(Gutters)</h3>\n<p><img src=\"https://miro.medium.com/max/720/1*g6wW06_XWFP66TAMgNj_2Q.webp\" alt=\"반응형 그리드의 여백 이미지\"></p>\n<p><code class=\"language-text\">홈통</code>은 기둥 사이의 공간을 말하며, <code class=\"language-text\">여백</code>은 콘텐츠를 분리하는데 도움이 된다.</p>\n<p>거터 너비를 고정 값으로 정의한다.</p>\n<br/>\n<h3 id=\"여백margins\" style=\"position:relative;\"><a href=\"#%EC%97%AC%EB%B0%B1margins\" aria-label=\"여백margins permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>여백(Margins)</h3>\n<p><img src=\"https://miro.medium.com/max/720/1*dED87P84Mwaj9bXzV7-AZQ.webp\" alt=\"반응형 그리드의 측면 및 유연한 여백\"></p>\n<p><code class=\"language-text\">여백(Margin)</code>은 콘텐츠와 화면 가장자리 사이의 공간으로 <code class=\"language-text\">측면 여백 너비</code>는 모든 화면 크기에서 최소 호흡 공간을 결정하는 고정 값으로 정의한다.</p>\n<p><code class=\"language-text\">유연한 여백</code>은 기둥, 거터, 측면 여백으로 그리드를 <code class=\"language-text\">구성한 후 남은 공간을 차지</code>한다.(다양한 화면 크기에 따라 변경)</p>\n<br/>\n<h2 id=\"열구조column-structure\" style=\"position:relative;\"><a href=\"#%EC%97%B4%EA%B5%AC%EC%A1%B0column-structure\" aria-label=\"열구조column structure permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>열구조(Column Structure)</h2>\n<p><img src=\"https://miro.medium.com/max/720/1*1nOZBG-lZSgQ84Mv5vlV7A.webp\" alt=\"8/12/16/20 기둥 그리드 구조\"></p>\n<p><strong>그리드를 구성하는 데 사용되는 열의 수</strong>를 <code class=\"language-text\">열 구조</code>라고 하는데, <code class=\"language-text\">8, 12, 16 및 20은 반응형 레이아웃을 위한 가장 일반적인 열 구조</code> 중 일부이다.</p>\n<p><strong>보통 그리드의 열의 수는 프로젝트의 설계 요구 사항에 따라 정해진다.</strong></p>\n<p>보통은 <code class=\"language-text\">12열 구조</code>가 가장 민첩한데 그 이유는? <strong>4–4–4 또는 3–3–3–3 크기의 상위 컨테이너에 콘텐츠를 정렬하기 위해 더 세분화할 수 있기 때문이다.</strong></p>\n<br/>\n<h2 id=\"중단점breakpoint\" style=\"position:relative;\"><a href=\"#%EC%A4%91%EB%8B%A8%EC%A0%90breakpoint\" aria-label=\"중단점breakpoint permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>중단점(Breakpoint)</h2>\n<p><img src=\"https://miro.medium.com/max/720/1*hxYymw2qjJkftPjKOdqSjw.webp\" alt=\"그리드 스케일링 및 스태킹\"></p>\n<p>가능한 최상의 레이아웃 보기여 주기 위해 조정되는 화면 크기의 <code class=\"language-text\">특정 범위</code>를 말한다.</p>\n<p>열 구조, 열 너비, 거터 너비 및 여백은 중단점에 따라 다르다.</p>\n<p>상위 컨테이너는 서로 다른 중단점에 따라 쌓이거나 확장되어 최상의 보기를 위해 재조정된다.</p>\n<p>작은 화면에 내용에 맞게 사용 가능한 공간이 충분하면 열 크기가 조정되어 축소된다. 콘텐츠가 작은 화면의 사용 가능한 공간에 맞지 않으면 열이 세로로 쌓인다.</p>\n<br/>\n<h2 id=\"참고링크\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0%EB%A7%81%ED%81%AC\" aria-label=\"참고링크 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고링크</h2>\n<p><a href=\"https://medium.muz.li/responsive-grid-design-ultimate-guide-7aa41ca7892\">Responsive Grid Design: Ultimate Guide</a></p>\n<p><a href=\"https://inpa.tistory.com/entry/BOOTSTRAP-%F0%9F%93%9A-%EB%B0%98%EC%9D%91%ED%98%95-%EC%8B%9C%EC%8A%A4%ED%85%9C-%EC%A0%95%EB%A6%AC-%EC%A4%91%EB%8B%A8%EC%A0%90\">반응형 시스템 정리 - 중단점 (미디어 쿼리)</a></p>\n<p><a href=\"https://www.w3schools.com/w3css/w3css_grid.asp\">W3.CSS Responsive Fluid Grid</a></p>\n<p><a href=\"https://language-money.tistory.com/47\">반응형 웹 만들기 1 - 고정 그리드 레이아웃 VS 가변 그리드 레이아웃</a></p>\n<br/>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%EC%9A%B0%EC%84%A0-%EA%B7%B8%EB%A6%AC%EB%93%9C-%EC%8B%9C%EC%8A%A4%ED%85%9C-grid-system%EC%9D%B4%EB%9E%80\">우선 그리드 시스템 (grid system)이란?</a></p>\n</li>\n<li>\n<p><a href=\"#%EA%B7%B8%EB%A6%AC%EA%B3%A0-%EA%B3%A0%EC%A0%95-%EA%B7%B8%EB%A6%AC%EB%93%9C-%EB%A0%88%EC%9D%B4%EC%95%84%EC%9B%83-fixed-grid-layout\">그리고 고정 그리드 레이아웃 (fixed grid layout)</a></p>\n</li>\n<li>\n<p><a href=\"#%EA%B7%B8%EB%9E%98%EC%84%9C-%EA%B0%80%EB%B3%80-%EA%B7%B8%EB%A6%AC%EB%93%9C-%EB%A0%88%EC%9D%B4%EC%95%84%EC%9B%83-fluid-grid-layout%EC%9D%B4%EB%9E%80\">그래서 가변 그리드 레이아웃 (fluid grid layout)이란?</a></p>\n</li>\n<li>\n<p><a href=\"#%EA%B7%B8%EB%A6%AC%EB%93%9C%EC%9D%98-%EA%B5%AC%EC%84%B1%EC%9A%94%EC%86%8C\">그리드의 구성요소</a></p>\n<ul>\n<li><a href=\"#%EC%97%B4columns\">열(Columns)</a></li>\n<li><a href=\"#%ED%99%88%ED%86%B5gutters\">홈통(Gutters)</a></li>\n<li><a href=\"#%EC%97%AC%EB%B0%B1margins\">여백(Margins)</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%97%B4%EA%B5%AC%EC%A1%B0column-structure\">열구조(Column Structure)</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%A4%91%EB%8B%A8%EC%A0%90breakpoint\">중단점(Breakpoint)</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%B0%B8%EA%B3%A0%EB%A7%81%ED%81%AC\">참고링크</a></p>\n</li>\n</ul>\n</div>","frontmatter":{"date":"December 31, 2022","title":"가변 그리드(Fluid Grid)란?","categories":"개발지식 ResponsiveWep","author":"JungSany","emoji":"🌃"},"fields":{"slug":"/knowledge/responsive-web/fluid-grid/"}},"site":{"siteMetadata":{"siteUrl":"https://rnfltpgus.github.io/","comments":{"utterances":{"repo":"rnfltpgus/rnfltpgus.github.io"}}}}},"pageContext":{"slug":"/knowledge/responsive-web/media-query/","nextSlug":"/knowledge/responsive-web/viewport/","prevSlug":"/knowledge/responsive-web/fluid-grid/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}