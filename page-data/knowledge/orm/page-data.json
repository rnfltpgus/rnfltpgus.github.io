{"componentChunkName":"component---src-templates-blog-template-js","path":"/knowledge/orm/","result":{"data":{"cur":{"id":"9fe96375-0111-5c04-b2ed-17373e21ef3f","html":"<p><img src=\"https://i0.wp.com/hanamon.kr/wp-content/uploads/2021/09/ORM.png?w=1847&#x26;ssl=1\" alt=\"ORM (Object Relational Mapping) 이미지\"></p>\n<p><strong><code class=\"language-text\">객체 관계 매핑(Object Relational Mapping : ORM)</code>은 데이터베이스와 객체 지향 프로그래밍 언어 간의 호환되지 않는 데이터를 변환하는 프로그래밍 기법이다.</strong></p>\n<p>객체 관계 매핑을 가능하게 하는 상용 또는 무료 소프트웨어 패키지들이 있고, 경우에 따라서는 독자적으로 개발하기도 한다.</p>\n<br/>\n<h1 id=\"그래서-ormobject-relational-mapping-이란\" style=\"position:relative;\"><a href=\"#%EA%B7%B8%EB%9E%98%EC%84%9C-ormobject-relational-mapping-%EC%9D%B4%EB%9E%80\" aria-label=\"그래서 ormobject relational mapping 이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>그래서 ORM(Object Relational Mapping) 이란?</h1>\n<ul>\n<li>ORM은 Object Relational Mapping(객체∙관계∙매핑)의 약자이다.</li>\n<li>ORM은 객체 지향 언어에서 사용할 수 있는 **<code class=\"language-text\">가상객체 데이터베이스를 구축하는 방법</code>**이다.</li>\n<li>ORM은 객체와 데이터베이스의 <strong><code class=\"language-text\">관계를 매핑</code>해주는 도구</strong>이다.</li>\n<li>ORM은 프로그래밍 언어의 객체와 관계형 데이터베이스의 데이터를 <strong><code class=\"language-text\">자동으로</code> 매핑해주는 도구</strong>이다.</li>\n<li>ORM은 프로그래밍 언어의 객체와 관계형 데이터베이스 사이의 <strong><code class=\"language-text\">중계자</code>역할</strong>을 한다.</li>\n<li>ORM은 <strong><code class=\"language-text\">MVC 패턴에서 모델(Model)을 기술</code>하는 도구</strong>이다.</li>\n<li><strong>ORM은 객체와 모델 사이의 관계를 기술하는 도구이다.</strong></li>\n<li>Persistant API라고도 할 수 있다.</li>\n</ul>\n<br/>\n<h2 id=\"orm-사용-이유-oop-vs-relational-database\" style=\"position:relative;\"><a href=\"#orm-%EC%82%AC%EC%9A%A9-%EC%9D%B4%EC%9C%A0-oop-vs-relational-database\" aria-label=\"orm 사용 이유 oop vs relational database permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ORM 사용 이유 (OOP vs Relational Database)</h2>\n<p><strong><code class=\"language-text\">객체 지향 프로그래밍은</code> 클래스를 이용하고 <code class=\"language-text\">관계형 데이터베이스는</code> 테이블을 이용하는데, 객체 모델과 관계형 모델 간의 <code class=\"language-text\">불일치가 존재</code>한다.</strong></p>\n<p>ORM을 이용해서 데이터베이스 접근을 프로그래밍 언어의 관점에서 맞출 수 있고, 이용해서 객체 간의 관계를 바탕으로 SQL을 자동으로 생성하여 <code class=\"language-text\">불일치를 해결</code>한다.</p>\n<p>ORM을 이용해서 SQL 문을 직접 작성하지 않고 엔티티를 <code class=\"language-text\">객체로 표현할 수 있고, 객체를 통해 간접적으로 데이터베이스를 다룬다.</code></p>\n<p>이를 통해 데이터베이스 세계와 프로그래밍 언어 사이의 개념의 간극을 줄이고, 느슨하게 연결된 테스트에 용이한 애플리케이션을 만들 수 있다.</p>\n<br/>\n<h2 id=\"orm-장점\" style=\"position:relative;\"><a href=\"#orm-%EC%9E%A5%EC%A0%90\" aria-label=\"orm 장점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ORM 장점</h2>\n<h3 id=\"1-직관적인-코드-가독성--비지니스-로직-집중-가능-생산성\" style=\"position:relative;\"><a href=\"#1-%EC%A7%81%EA%B4%80%EC%A0%81%EC%9D%B8-%EC%BD%94%EB%93%9C-%EA%B0%80%EB%8F%85%EC%84%B1--%EB%B9%84%EC%A7%80%EB%8B%88%EC%8A%A4-%EB%A1%9C%EC%A7%81-%EC%A7%91%EC%A4%91-%EA%B0%80%EB%8A%A5-%EC%83%9D%EC%82%B0%EC%84%B1\" aria-label=\"1 직관적인 코드 가독성  비지니스 로직 집중 가능 생산성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 직관적인 코드 (가독성) + 비지니스 로직 집중 가능 (생산성)</h3>\n<ul>\n<li>선언문, 할당, 종료 같은 부수적인 코드가 없거나 급격히 줄어든다.</li>\n<li>각종 객체에 대한 코드를 별도로 작성하기 때문에 <code class=\"language-text\">코드 가독성을 높여준다.</code></li>\n<li>SQL의 절차적이고 순차적인 접근이 아닌 객체 지향적인 접근으로 <code class=\"language-text\">생산성이 증가한다.</code></li>\n</ul>\n<br/>\n<h3 id=\"2-재사용-및-유지보수-편리성-증가\" style=\"position:relative;\"><a href=\"#2-%EC%9E%AC%EC%82%AC%EC%9A%A9-%EB%B0%8F-%EC%9C%A0%EC%A7%80%EB%B3%B4%EC%88%98-%ED%8E%B8%EB%A6%AC%EC%84%B1-%EC%A6%9D%EA%B0%80\" aria-label=\"2 재사용 및 유지보수 편리성 증가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 재사용 및 유지보수 편리성 증가</h3>\n<ul>\n<li>매핑정보가 명확하여, ERD를 보는 것에 대한 <code class=\"language-text\">의존도를 낮출 수 있다.</code></li>\n<li>ORM은 독립적으로 작성되어있고, 해당 객체들을 <code class=\"language-text\">재활용</code>할 수 있다.</li>\n<li>때문에 모델에서 가공된 데이터를 컨트롤러에 의해 뷰와 합쳐지는 형태로 <code class=\"language-text\">디자인 패턴을 견고하게 다지는데 유리</code>하다.</li>\n</ul>\n<br/>\n<h3 id=\"3-dbms에-대한-종속성-저하\" style=\"position:relative;\"><a href=\"#3-dbms%EC%97%90-%EB%8C%80%ED%95%9C-%EC%A2%85%EC%86%8D%EC%84%B1-%EC%A0%80%ED%95%98\" aria-label=\"3 dbms에 대한 종속성 저하 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. DBMS에 대한 종속성 저하</h3>\n<ul>\n<li>객체 간 관계를 바탕으로 SQL을 자동으로 생성하기 때문에 <code class=\"language-text\">RDBMS의 데이터 구조와 프로그래밍 언어의 객체 모델 사이의 간격을 좁힌다.</code></li>\n<li>대부분의 ORM 솔루션은 DB에 종속적이지 않다.</li>\n</ul>\n<br/>\n<h2 id=\"orm-단점\" style=\"position:relative;\"><a href=\"#orm-%EB%8B%A8%EC%A0%90\" aria-label=\"orm 단점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ORM 단점</h2>\n<h3 id=\"1-완벽한-orm-으로만-서비스를-구현하기-어려움\" style=\"position:relative;\"><a href=\"#1-%EC%99%84%EB%B2%BD%ED%95%9C-orm-%EC%9C%BC%EB%A1%9C%EB%A7%8C-%EC%84%9C%EB%B9%84%EC%8A%A4%EB%A5%BC-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0-%EC%96%B4%EB%A0%A4%EC%9B%80\" aria-label=\"1 완벽한 orm 으로만 서비스를 구현하기 어려움 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 완벽한 ORM 으로만 서비스를 구현하기 어려움</h3>\n<ul>\n<li>사용하기는 편리하지만 <code class=\"language-text\">설계는 신중</code>하게 해야한다.</li>\n<li>프로젝트의 <code class=\"language-text\">복잡성</code>이 커질 경우 난이도 또한 올라간다.</li>\n<li>잘못 구현된 경우 <code class=\"language-text\">일관성이 무너지는 문제점</code>이 생길 수 있다.</li>\n</ul>\n<br/>\n<h2 id=\"용어사전\" style=\"position:relative;\"><a href=\"#%EC%9A%A9%EC%96%B4%EC%82%AC%EC%A0%84\" aria-label=\"용어사전 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>용어사전</h2>\n<p><strong>영속성(Persistence)</strong> : 데이터를 생성한 프로그램이 종료되더라도 사라지지 않는 데이터의 특성</p>\n<br/>\n<h2 id=\"참고링크\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0%EB%A7%81%ED%81%AC\" aria-label=\"참고링크 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고링크</h2>\n<p><a href=\"https://gmlwjd9405.github.io/2019/02/01/orm.html\">[DB] ORM이란</a></p>\n<p><a href=\"https://gmlwjd9405.github.io/2018/12/25/difference-jdbc-jpa-mybatis.html\">[JDBC] JDBC, JPA/Hibernate, Mybatis의 차이</a></p>\n<p><a href=\"https://hanamon.kr/mvc%eb%9e%80-mvc-design-pattern/\">하나몬 - [데이터베이스] ORM이란? (Node.js ORM Lib Sequelize 소개)</a></p>\n<p><a href=\"https://hanamon.kr/mvc%eb%9e%80-mvc-design-pattern/\">하나몬 - MVC란?</a></p>\n<p><a href=\"https://ko.wikipedia.org/wiki/%EA%B0%9D%EC%B2%B4_%EA%B4%80%EA%B3%84_%EB%A7%A4%ED%95%91\">위키백과 - ORM</a></p>\n<br/>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#orm-%EC%82%AC%EC%9A%A9-%EC%9D%B4%EC%9C%A0-oop-vs-relational-database\">ORM 사용 이유 (OOP vs Relational Database)</a></p>\n</li>\n<li>\n<p><a href=\"#orm-%EC%9E%A5%EC%A0%90\">ORM 장점</a></p>\n<ul>\n<li><a href=\"#1-%EC%A7%81%EA%B4%80%EC%A0%81%EC%9D%B8-%EC%BD%94%EB%93%9C-%EA%B0%80%EB%8F%85%EC%84%B1--%EB%B9%84%EC%A7%80%EB%8B%88%EC%8A%A4-%EB%A1%9C%EC%A7%81-%EC%A7%91%EC%A4%91-%EA%B0%80%EB%8A%A5-%EC%83%9D%EC%82%B0%EC%84%B1\">1. 직관적인 코드 (가독성) + 비지니스 로직 집중 가능 (생산성)</a></li>\n<li><a href=\"#2-%EC%9E%AC%EC%82%AC%EC%9A%A9-%EB%B0%8F-%EC%9C%A0%EC%A7%80%EB%B3%B4%EC%88%98-%ED%8E%B8%EB%A6%AC%EC%84%B1-%EC%A6%9D%EA%B0%80\">2. 재사용 및 유지보수 편리성 증가</a></li>\n<li><a href=\"#3-dbms%EC%97%90-%EB%8C%80%ED%95%9C-%EC%A2%85%EC%86%8D%EC%84%B1-%EC%A0%80%ED%95%98\">3. DBMS에 대한 종속성 저하</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#orm-%EB%8B%A8%EC%A0%90\">ORM 단점</a></p>\n<ul>\n<li><a href=\"#1-%EC%99%84%EB%B2%BD%ED%95%9C-orm-%EC%9C%BC%EB%A1%9C%EB%A7%8C-%EC%84%9C%EB%B9%84%EC%8A%A4%EB%A5%BC-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0-%EC%96%B4%EB%A0%A4%EC%9B%80\">1. 완벽한 ORM 으로만 서비스를 구현하기 어려움</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%9A%A9%EC%96%B4%EC%82%AC%EC%A0%84\">용어사전</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%B0%B8%EA%B3%A0%EB%A7%81%ED%81%AC\">참고링크</a></p>\n</li>\n</ul>\n</div>","excerpt":"ORM (Object Relational Mapping) 이미지 은 데이터베이스와 객체 지향 프로그래밍 언어 간의 호환되지 않는 데이터를 변환하는 프로그래밍 기법이다. 객체 관계 매핑을 가능하게 하는 상용 또는 무료 소프트웨어 패키지들이 있고, 경우에 따라서는 독자적으로 개발하기도 한다. 그래서 ORM(Object Relational Mapping) 이란? ORM은 Object Relational Mapping(객체∙관계∙매핑)의 약자이다. ORM은 객체 지향 언어에서 사용할 수 있는 ****이다. ORM은 객체와 데이터베이스의 해주는 도구이다. ORM은 프로그래밍 언어의 객체와 관계형 데이터베이스의 데이터를  매핑해주는 도구이다. ORM은 프로그래밍 언어의 객체와 관계형 데이터베이스 사이의 역할을 한다. ORM은 하는 도구이다. ORM은 객체와 모델 사이의 관계를 기술하는 도구이다. Persistant API라고도 할 수 있다. ORM 사용 이유 (OOP vs Relational…","frontmatter":{"date":"January 24, 2023","title":"ORM이란?","categories":"개발지식","author":"JungSany","emoji":"⛓️"},"fields":{"slug":"/knowledge/orm/"}},"next":{"id":"90c8473f-1b64-5e8d-8607-a74e8c81354e","html":"<h2 id=\"1월-24일\" style=\"position:relative;\"><a href=\"#1%EC%9B%94-24%EC%9D%BC\" aria-label=\"1월 24일 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1월 24일</h2>\n<p>음.. 글을 오랫만에 적는 것 같다.</p>\n<p>현재는 <strong><code class=\"language-text\">타운즈</code>라는 회사에 입사해서 프론트엔드 개발자로 취업에 성공</strong>하였다.</p>\n<p><strong>2주가 흘렀고, 온보딩 기간중이다.</strong></p>\n<p>우선 회사 사람들이 다 좋은 것 같다. 그래서 몇가지 고민거리가 있었지만 사라지게 되었다.</p>\n<p>하루하루 무의미하게 보내지말고 할 수 있을떄 최대한 하고 놀떄 놀아야겠다!🤨</p>\n<br/>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#1%EC%9B%94-24%EC%9D%BC\">1월 24일</a></li>\n</ul>\n</div>","frontmatter":{"date":"January 24, 2023","title":"2023년 01월","categories":"Diary","author":"JungSany","emoji":"0️⃣1️⃣"},"fields":{"slug":"/diary/2023.01/"}},"prev":null,"site":{"siteMetadata":{"siteUrl":"https://rnfltpgus.github.io","comments":{"utterances":{"repo":"rnfltpgus/rnfltpgus.github.io"}}}}},"pageContext":{"slug":"/knowledge/orm/","nextSlug":"/diary/2023.01/","prevSlug":""}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}