{"componentChunkName":"component---src-templates-blog-template-js","path":"/typescript/any-unknown/","result":{"data":{"cur":{"id":"5afe24f6-e386-5fde-a657-02481ff189da","html":"<h2 id=\"any\" style=\"position:relative;\"><a href=\"#any\" aria-label=\"any permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>any</h2>\n<ul>\n<li>any의 사전적인 의미는 <code class=\"language-text\">어떤 것이든지, 누구든지</code> 이고,</li>\n<li>TypeScript에서는 <code class=\"language-text\">어떤 타입이든</code>으로 해석할 수 있다.</li>\n<li>어떤 것이든지 허용하는 <code class=\"language-text\">any</code>는 엄격하게 타입을 검사하고 처리하는 TypeScript에서 치명적이다.</li>\n<li><strong>개발 당시에는 문제가 없으나 개발 후 예기치 못한 문제가 발생할 가능성이 매우 높다.</strong></li>\n</ul>\n<br/>\n<h2 id=\"unknown\" style=\"position:relative;\"><a href=\"#unknown\" aria-label=\"unknown permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>unknown</h2>\n<ul>\n<li>unknown의 사전적인 의미는 <code class=\"language-text\">알 수 없다, 모른다</code> 이다.</li>\n<li>unknown도 any와 <code class=\"language-text\">동일하게 모든 값을 허용</code>하지만, <code class=\"language-text\">할당된 값이 어떤 타입인지 모르기 때문에</code> 함부로 <code class=\"language-text\">프로퍼티나 연산을 할 수 없다</code>.</li>\n<li>unknown 타입으로 변수를 정의하면 컴파일러에게 변수의 타입이 unknown이라 어떤 값이든 올 수 있다.</li>\n<li>그래서 <code class=\"language-text\">엄격하게 검사해라 라고 요청하는 것과 동일</code>하다.</li>\n<li>체크를 해야 되는 코드는 많아지겠지만, <code class=\"language-text\">사전에 문제가 되는 부분을 방지할 수 있으므로 any 타입에 비해 안정적인 애플리케이션을 개발할 수 있다.</code></li>\n<li><strong>any와 다르게 프로퍼티 또는 연산을 하는 경우 컴파일러가 체크하기 때문에 문제가 되는 코드를 미리 예방할 수 있다.</strong></li>\n</ul>\n<br/>\n<h2 id=\"한줄-정리\" style=\"position:relative;\"><a href=\"#%ED%95%9C%EC%A4%84-%EC%A0%95%EB%A6%AC\" aria-label=\"한줄 정리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>한줄 정리</h2>\n<ul>\n<li>우선 <code class=\"language-text\">any</code>와 <code class=\"language-text\">unknown</code>은 <strong>모든 타입을 혀용</strong>한다는 점에서 같다.</li>\n<li>하지만 컴파일 타임에 프로퍼티 또는 연산을 하는 경우, <code class=\"language-text\">any</code> 타입은 에러가 출력되지 않지만 <code class=\"language-text\">unknown</code>의 경우 타입을 체크하기 때문에 문제되는 코드를 미리 예방할 수 있다.</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#any\">any</a></li>\n<li><a href=\"#unknown\">unknown</a></li>\n<li><a href=\"#%ED%95%9C%EC%A4%84-%EC%A0%95%EB%A6%AC\">한줄 정리</a></li>\n</ul>\n</div>","excerpt":"any any의 사전적인 의미는  이고, TypeScript에서는 으로 해석할 수 있다. 어떤 것이든지 허용하는 는 엄격하게 타입을 검사하고 처리하는 TypeScript에서 치명적이다. 개발 당시에는 문제가 없으나 개발 후 예기치 못한 문제가 발생할 가능성이 매우 높다. unknown unknown의 사전적인 의미는  이다. unknown도 any와 하지만,  함부로 . unknown 타입으로 변수를 정의하면 컴파일러에게 변수의 타입이 unknown이라 어떤 값이든 올 수 있다. 그래서 하다. 체크를 해야 되는 코드는 많아지겠지만,  any와 다르게 프로퍼티 또는 연산을 하는 경우 컴파일러가 체크하기 때문에 문제가 되는 코드를 미리 예방할 수 있다. 한줄 정리 우선 와 은 모든 타입을 혀용한다는 점에서 같다. 하지만 컴파일 타임에 프로퍼티 또는 연산을 하는 경우,  타입은 에러가 출력되지 않지만 의 경우 타입을 체크하기 때문에 문제되는 코드를 미리 예방할 수 있다. any unkn…","frontmatter":{"date":"December 18, 2022","title":"any와 unknown 차이","categories":"TypeScript","author":"JungSany","emoji":"🐒"},"fields":{"slug":"/typescript/any-unknown/"}},"next":{"id":"94524c66-68fb-5402-8917-6849158e3f81","html":"<h3 id=\"enum이란\" style=\"position:relative;\"><a href=\"#enum%EC%9D%B4%EB%9E%80\" aria-label=\"enum이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>enum이란?</h3>\n<ul>\n<li>열거형 변수로 정수를 하나로 합칠 때 편리한 기능</li>\n<li>임의의 숫자나 문자열을 할당할 수 있으며, 하나의 유형으로 사용해서 버그를 줄일 수 있음</li>\n<li>TypeScript가 자체적으로 구현하는 기능</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token comment\">// 아무것도 지정하지 않은 경우에는 0부터 숫자를 매긴다.</span>\n<span class=\"token keyword\">enum</span> <span class=\"token constant\">MOBILE_OS</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token constant\">IOS</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 0</span>\n  <span class=\"token constant\">ANDROID</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 1</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 임의의 숫자나 문자열을 할당할 수도 있다.</span>\n<span class=\"token keyword\">enum</span> <span class=\"token constant\">MOBILE_OS</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token constant\">IOS</span> <span class=\"token operator\">=</span> <span class=\"token string\">'iOS'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">ANDROID</span> <span class=\"token operator\">=</span> <span class=\"token string\">'Android'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 아래와 같이 유형으로 사용할 수도 있다.</span>\n<span class=\"token keyword\">const</span> os<span class=\"token operator\">:</span> <span class=\"token constant\">MOBILE_OS</span> <span class=\"token operator\">=</span> <span class=\"token constant\">MOBILE_OS</span><span class=\"token punctuation\">.</span><span class=\"token constant\">IOS</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">detectOSType</span><span class=\"token punctuation\">(</span>userAgent<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token constant\">MOBILE_OS</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>JavaScript에서는 사용할 수 없기 때문에 아래와 같이 객체를 사용하는 코드를 작성하게 됨</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> <span class=\"token constant\">MOBILE_OS</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token constant\">IOS</span><span class=\"token operator\">:</span> <span class=\"token string\">'iOS'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">ANDROID</span><span class=\"token operator\">:</span> <span class=\"token string\">'Android'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token constant\">MOBILE_OS</span><span class=\"token punctuation\">.</span><span class=\"token constant\">IOS</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// iOS</span></code></pre></div>\n<ul>\n<li>enum은 편리한 기능이지만 TypeScript가 자체적으로 구현했기 때문에 Tree-shaking이 되지 않는다.</li>\n</ul>\n<br/>\n<h3 id=\"참고링크\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0%EB%A7%81%ED%81%AC\" aria-label=\"참고링크 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고링크</h3>\n<p><a href=\"https://engineering.linecorp.com/ko/blog/typescript-enum-tree-shaking/\">TypeScript enum을 사용하지 않는 게 좋은 이유를 Tree-shaking 관점에서 소개합니다.</a></p>\n<br/>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#enum%EC%9D%B4%EB%9E%80\">enum이란?</a></li>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0%EB%A7%81%ED%81%AC\">참고링크</a></li>\n</ul>\n</div>","frontmatter":{"date":"December 17, 2022","title":"enum이란?","categories":"TypeScript","author":"JungSany","emoji":"🙉"},"fields":{"slug":"/typescript/enum/"}},"prev":{"id":"6ff3b050-f290-5cb7-9556-407abb621434","html":"<h3 id=\"트리거란\" style=\"position:relative;\"><a href=\"#%ED%8A%B8%EB%A6%AC%EA%B1%B0%EB%9E%80\" aria-label=\"트리거란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>트리거란?</h3>\n<ul>\n<li>데이터베이스 <code class=\"language-text\">시스템에서</code> 삽입, 갱신, 삭제 등의 <code class=\"language-text\">이벤트가 발생할 때마다</code> 관련 <code class=\"language-text\">작업이 자동으로 수행</code>되는 절차형 SQL이다.</li>\n<li>테이블에 대한 이벤트에 반응해 자동으로 실행되는 작업을 의미</li>\n</ul>\n<br/>\n<h3 id=\"목적\" style=\"position:relative;\"><a href=\"#%EB%AA%A9%EC%A0%81\" aria-label=\"목적 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>목적</h3>\n<ul>\n<li>일반적으로 이벤트와 관련된 테이블의 데이터 삽입, 추가, 삭제 작업을 DBMS가 자동적으로 실행시키는데 활용</li>\n<li>데이터 무결성 유지 및 로그 메시지 출력 등의 별도 처리를 위해 사용되기도 함</li>\n<li>데이터베이스에 저장된 데이터 값과 그 것이 표현하는 실제 값이 일치하는 정확성을 의미</li>\n</ul>\n<br/>\n<h3 id=\"구성\" style=\"position:relative;\"><a href=\"#%EA%B5%AC%EC%84%B1\" aria-label=\"구성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>구성</h3>\n<table>\n<thead>\n<tr>\n<th>구성요소</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>선언부(DECLARE)</td>\n<td>트리거의 명칭을 정의하는 부분</td>\n</tr>\n<tr>\n<td>이벤트부(EVENT)</td>\n<td>트리거가 실행되는 타이밍, 이벤트를 명시하는 부분</td>\n</tr>\n<tr>\n<td>시작/종료부(BEGIN/END)</td>\n<td>트리거의 시작과 종료를 표현하는데 필수적이며, BEGIN/END가 쌍으로 이루어 추가되므로 블록으로 구성, 다수 실행을 제어하느 기본적 단위가 되며 논리적 프로세스를 구성</td>\n</tr>\n<tr>\n<td>제어부(CONTROL)</td>\n<td>기본적으로 순차적으로 처리, 비교 조건에 따라 블록 또는 문장을 실행, 조건에 따라 반복 실행</td>\n</tr>\n<tr>\n<td>SQL</td>\n<td>DML을 주로 사용하고, 자주 사용되지 않지만 DDL (TRUNCATE 등)을 사용</td>\n</tr>\n<tr>\n<td>예외부(EXCEPTION)</td>\n<td>BEGIN~END 절에서 실행되는 SQL 문이 실행될 때 예외 발생 시 예외 처리 방법을 정의하는 처리부</td>\n</tr>\n</tbody>\n</table>\n<br/>\n<h3 id=\"장--단점\" style=\"position:relative;\"><a href=\"#%EC%9E%A5--%EB%8B%A8%EC%A0%90\" aria-label=\"장  단점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>장 / 단점</h3>\n<ul>\n<li>장점\n<ul>\n<li>데이터 무결성의 강화(참조 무결성)</li>\n<li>업무처리 자동화\n<ul>\n<li>트리거를 사용하면 트랜잭션에 의해 자동으로 다른 명령을 일으킴으로써 업무처리를 자동화할 수 있음</li>\n<li>중간에 사용자가 개입하지 않고 구현된 규칙대로 알아서 실행됨</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>단점\n<ul>\n<li>트리거를 과도하게 사용한다면 복잡한 상호 의존성을 야기할 수 있음\n<ul>\n<li>예를 들어 하나의 트리거가 활성화되어 이 트리거 내의 SQL문이 수행되고, 그 결과로 인하여 다른 트리거가 활성화되어 그 트리거의 SQL문이 수행될 수 있음(트리거의 연쇄)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<br/>\n<h3 id=\"용어정리\" style=\"position:relative;\"><a href=\"#%EC%9A%A9%EC%96%B4%EC%A0%95%EB%A6%AC\" aria-label=\"용어정리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>용어정리</h3>\n<ul>\n<li>DDL(Data Definition Language): 데이터베이스를 정의하는 언어이며, 데이터를 생성, 수정, 삭제하는 등의 데이터의 전체의 골격을 결정하는 역할을 하는 언어</li>\n<li>DML(Data Manipulation Language): 정의된 데이터베이스에 입력된 레코드를 조회하거나 수정하거나 삭제하는 등의 역할을 하는 언어</li>\n<li>DCL(Data Control Language): 데이터베이스에 접근하거나 객체에 권한을 주는등의 역할을 하는 언어</li>\n</ul>\n<br/>\n<h3 id=\"참고링크\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0%EB%A7%81%ED%81%AC\" aria-label=\"참고링크 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고링크</h3>\n<p><a href=\"https://runcoding.tistory.com/32\">[DB] Trigger 트리거 개요 및 장단점</a></p>\n<p><a href=\"https://computer-science-student.tistory.com/129\">트리거(Trigger)의 개념과 목적 그리고 구성</a></p>\n<p><a href=\"https://velog.io/@ksk5401/DDL-DML-DCL-%EC%9D%B4%EB%9E%80\">DDL/DML/DCL 이란?</a></p>\n<br/>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%ED%8A%B8%EB%A6%AC%EA%B1%B0%EB%9E%80\">트리거란?</a></li>\n<li><a href=\"#%EB%AA%A9%EC%A0%81\">목적</a></li>\n<li><a href=\"#%EA%B5%AC%EC%84%B1\">구성</a></li>\n<li><a href=\"#%EC%9E%A5--%EB%8B%A8%EC%A0%90\">장 / 단점</a></li>\n<li><a href=\"#%EC%9A%A9%EC%96%B4%EC%A0%95%EB%A6%AC\">용어정리</a></li>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0%EB%A7%81%ED%81%AC\">참고링크</a></li>\n</ul>\n</div>","frontmatter":{"date":"December 18, 2022","title":"트리거(TRIGGER)란?","categories":"개발지식 데이터","author":"JungSany","emoji":"🧞‍♂️"},"fields":{"slug":"/data/trigger/"}},"site":{"siteMetadata":{"siteUrl":"https://rnfltpgus.github.io","comments":{"utterances":{"repo":"rnfltpgus/rnfltpgus.github.io"}}}}},"pageContext":{"slug":"/typescript/any-unknown/","nextSlug":"/typescript/enum/","prevSlug":"/data/trigger/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}