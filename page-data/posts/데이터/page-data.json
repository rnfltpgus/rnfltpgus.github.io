{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/데이터","result":{"pageContext":{"currentCategory":"데이터","categories":["All","JavaScript","데이터","개발지식","React","TypeScript","Next","최적화","앞으로만"],"edges":[{"node":{"id":"88c7c583-81a1-563f-a613-5a358d7b8a50","excerpt":"면접을 준비하면서 최근 면접때는 자료구조에 대해서 잘 나오지 않아 생각을 못하고 있었는데, 어제 면접에서 자료구조에 대해서와 장단점 비교에 대한 질문들이 나오게 되었고 나는 당황했다. 그래서 준비가 미비했던걸 인정하고 한번 정리해 보아야겠다. 블로그로 적으면 그래도 한번은 면접때 쭉 볼수 있으니까 말이다. 시간 복잡도에서 대해서 잠깐 알고 아래글을 읽자 아래 글을 읽으면서 시간 복잡도라는 것을 작성했는데,  알고리즘의 로직을 코드로 구현할 때 보통 많이 볼 수 있는데, 시간 복잡도를 고려한다는 말은 ‘입력값의 변화에 따라 연산을 실행할 때, 연산 횟수에 비해 시간이 얼마만큼 걸리는가?’라는 말이다. 효율적인 알고리즘을 구현한다는 것은 시간복잡도를 고려한다는 말이고 다시 말하면 는 이야기이다. 시간 복잡도는 보통  으로 나타낸다. 은 를 표기하는 방법이다. 자료구조란? 우선 자료구조에 대허서 설명해보려고 한다.  컴퓨터 과학에서 효율적인 접근 및 수정을 가능케 하는 자료의 조직, 관…","fields":{"slug":"/data/data-structure/structure/"},"frontmatter":{"categories":"JavaScript 데이터","title":"자료구조(Data Structure)란? 그리고 종류","date":"December 27, 2022"}},"next":{"fields":{"slug":"/javascript/array-javascriptarray/"}},"previous":null},{"node":{"id":"1545f13d-c4c8-5475-875c-57f4b0a9b86d","excerpt":"트리거란? 데이터베이스  삽입, 갱신, 삭제 등의  관련 되는 절차형 SQL이다. 테이블에 대한 이벤트에 반응해 자동으로 실행되는 작업을 의미 목적 일반적으로 이벤트와 관련된 테이블의 데이터 삽입, 추가, 삭제 작업을 DBMS가 자동적으로 실행시키는데 활용 데이터 무결성 유지 및 로그 메시지 출력 등의 별도 처리를 위해 사용되기도 함 데이터베이스에 저장된 데이터 값과 그 것이 표현하는 실제 값이 일치하는 정확성을 의미 구성 구성요소 설명 선언부(DECLARE) 트리거의 명칭을 정의하는 부분 이벤트부(EVENT) 트리거가 실행되는 타이밍, 이벤트를 명시하는 부분 시작/종료부(BEGIN/END) 트리거의 시작과 종료를 표현하는데 필수적이며, BEGIN/END가 쌍으로 이루어 추가되므로 블록으로 구성, 다수 실행을 제어하느 기본적 단위가 되며 논리적 프로세스를 구성 제어부(CONTROL) 기본적으로 순차적으로 처리, 비교 조건에 따라 블록 또는 문장을 실행, 조건에 따라 반복 실행 SQ…","fields":{"slug":"/data/trigger/"},"frontmatter":{"categories":"개발지식 데이터","title":"트리거(TRIGGER)란?","date":"December 18, 2022"}},"next":{"fields":{"slug":"/typescript/any-unknown/"}},"previous":{"fields":{"slug":"/react/redux-thunk-Reason-for-use/"}}},{"node":{"id":"7dcb98a7-3574-531f-89d6-616bd4058e30","excerpt":"각 주제에 따라 테이블을 나누어 작성한 후, 정보를 가져오는 경우 가 있다. 이때 을 사용하게 되는데, 그 중 많이 사용하는 것이 과 이다. 차이점 두 테이블에서 을 위한 기준 열이 서로 값을 가지고 있는 경우 조회에서 누락되는 행은 존재하지 않는다. 그렇다면 과 은 같은 조회 결과를 보인다. 이때, 이 상대적으로 성능이 좋다고 한다. 결론 은 합집합, 은 교집합이다. 결과가 같다면 대신  을 사용하는게 좋다. 차이점 결론","fields":{"slug":"/data/left-inner-join/"},"frontmatter":{"categories":"개발지식 데이터","title":"SQL - LEFT JOIN, INNER JOIN 차이","date":"December 13, 2022"}},"next":{"fields":{"slug":"/data/sql-nosql/"}},"previous":{"fields":{"slug":"/knowledge/cache-caching/"}}},{"node":{"id":"e1b60193-339c-5763-9b37-cba3dccfb2dc","excerpt":"SQL(관계형 DB) SQL을 사용하면 RDBMS(관리 시스템)에서 데이터를 저장, 수정, 삭제 및 검색할 수 있음 관계형 데이터베이스의 핵심 특징 데이터는  테이블에 저장된다. 데이터는  여러 테이블에 분산된다. 데이터는 테이블에 레코드로 저장되는데, 각 테이블마다 명확하게 정의된 구조가 있다. 해당 으로 정의된다. 따라서 스키마를 준수하지 않은 레코드는 테이블에 추가할 수 없다. 즉, 스키마를 수정하지 않은 이상 정해진 구조에 맞는 레코드만 추가가 가능한 것이 관계형 데이터베이스의 특징 중 하나다. 또한, 데이터 중복을 피하기 위해 ‘관계’를 이용한다.\n데이터 중복을 피하기 위한 데이터 관계 예시 하나의 테이블에서 중복 없이 하나의 데이터만을 관리하기 때문에 다른 테이블에서 부정확 데이터를 다룰 위험이 없어지는 장점이 있다. NoSQL(비관계형 DB) SQL(관계형 DB)와 반대로 스키마도 없고, 관계도 없다. NOSQL에서는 레코드를 문서(documents)라고 부른다. 여기…","fields":{"slug":"/data/sql-nosql/"},"frontmatter":{"categories":"개발지식 데이터","title":"SQL과 NOSQL 차이","date":"December 13, 2022"}},"next":{"fields":{"slug":"/knowledge/local-sesstion/"}},"previous":{"fields":{"slug":"/data/left-inner-join/"}}}]}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}