{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/데이터","result":{"pageContext":{"currentCategory":"데이터","categories":["All","TypeScript","Next","개발지식","데이터","최적화","React","앞으로만"],"edges":[{"node":{"id":"7dcb98a7-3574-531f-89d6-616bd4058e30","excerpt":"각 주제에 따라 테이블을 나누어 작성한 후, 정보를 가져오는 경우 가 있다. 이때 을 사용하게 되는데, 그 중 많이 사용하는 것이 과 이다. 차이점 두 테이블에서 을 위한 기준 열이 서로 값을 가지고 있는 경우 조회에서 누락되는 행은 존재하지 않는다. 그렇다면 과 은 같은 조회 결과를 보인다. 이때, 이 상대적으로 성능이 좋다고 한다. 결론 은 합집합, 은 교집합이다. 결과가 같다면 대신  을 사용하는게 좋다. 차이점 결론","fields":{"slug":"/data/left-inner-join/"},"frontmatter":{"categories":"개발지식 데이터","title":"SQL - LEFT JOIN, INNER JOIN 차이","date":"December 13, 2022"}},"next":{"fields":{"slug":"/data/sql-nosql/"}},"previous":{"fields":{"slug":"/knowledge/cache-caching/"}}},{"node":{"id":"e1b60193-339c-5763-9b37-cba3dccfb2dc","excerpt":"SQL(관계형 DB) SQL을 사용하면 RDBMS(관리 시스템)에서 데이터를 저장, 수정, 삭제 및 검색할 수 있음 관계형 데이터베이스의 핵심 특징 데이터는  테이블에 저장된다. 데이터는  여러 테이블에 분산된다. 데이터는 테이블에 레코드로 저장되는데, 각 테이블마다 명확하게 정의된 구조가 있다. 해당 으로 정의된다. 따라서 스키마를 준수하지 않은 레코드는 테이블에 추가할 수 없다. 즉, 스키마를 수정하지 않은 이상 정해진 구조에 맞는 레코드만 추가가 가능한 것이 관계형 데이터베이스의 특징 중 하나다. 또한, 데이터 중복을 피하기 위해 ‘관계’를 이용한다.\n데이터 중복을 피하기 위한 데이터 관계 예시 하나의 테이블에서 중복 없이 하나의 데이터만을 관리하기 때문에 다른 테이블에서 부정확 데이터를 다룰 위험이 없어지는 장점이 있다. NoSQL(비관계형 DB) SQL(관계형 DB)와 반대로 스키마도 없고, 관계도 없다. NOSQL에서는 레코드를 문서(documents)라고 부른다. 여기…","fields":{"slug":"/data/sql-nosql/"},"frontmatter":{"categories":"개발지식 데이터","title":"SQL과 NOSQL 차이","date":"December 13, 2022"}},"next":{"fields":{"slug":"/knowledge/local-sesstion/"}},"previous":{"fields":{"slug":"/data/left-inner-join/"}}}]}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}